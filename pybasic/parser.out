Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement COLON statement
Rule 2     statement -> assignment
Rule 3     statement -> declaration
Rule 4     statement -> funcall
Rule 5     statement -> control
Rule 6     statement -> return
Rule 7     statement -> defun_statement
Rule 8     statement -> expression
Rule 9     statement -> block_begin
Rule 10    statement -> block_end
Rule 11    statement -> if_block_begin
Rule 12    statement -> elseif_block_begin
Rule 13    statement -> else_statement
Rule 14    args_list -> args_list COMMA expression
Rule 15    args_list -> expression
Rule 16    params_list -> params_list COMMA ID
Rule 17    params_list -> ID
Rule 18    defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression
Rule 19    funcall -> ID args_list
Rule 20    assignment -> ID EQUALS expression
Rule 21    assignment -> LET ID EQUALS expression
Rule 22    assignment -> ID LPAREN expression RPAREN EQUALS expression
Rule 23    assignment -> expression DOT ID EQUALS expression
Rule 24    declaration -> declare_array
Rule 25    declare_array -> DIM ID LPAREN expression RPAREN AS ID
Rule 26    rel_expression -> expression GREATER_THAN expression
Rule 27    rel_expression -> expression LESS_THAN expression
Rule 28    rel_expression -> expression EQUAL_GREATER_THAN expression
Rule 29    rel_expression -> expression EQUAL_LESS_THAN expression
Rule 30    rel_expression -> expression EQUALS expression
Rule 31    rel_expression -> expression NOT_EQUAL expression
Rule 32    rel_expression -> rel_expression AND rel_expression
Rule 33    rel_expression -> rel_expression OR rel_expression
Rule 34    rel_expression -> LPAREN rel_expression RPAREN
Rule 35    rel_expression -> NOT rel_expression
Rule 36    expression -> expression PLUS expression
Rule 37    expression -> expression MINUS expression
Rule 38    expression -> expression TIMES expression
Rule 39    expression -> expression DIVIDE expression
Rule 40    expression -> expression EXACTDIV expression
Rule 41    expression -> expression MOD expression
Rule 42    expression -> expression AS expression
Rule 43    expression -> expression EXP expression
Rule 44    expression -> expression DOT ID
Rule 45    expression -> MINUS expression
Rule 46    expression -> LPAREN expression RPAREN
Rule 47    expression -> ID LPAREN RPAREN
Rule 48    expression -> ID LPAREN args_list RPAREN
Rule 49    expression -> INTEGER
Rule 50    expression -> DECIMAL
Rule 51    expression -> STRING
Rule 52    expression -> ID
Rule 53    expression -> LBRACE args_list RBRACE
Rule 54    block_begin -> while_block_begin
Rule 55    block_begin -> for_block_begin
Rule 56    block_begin -> do_block_begin
Rule 57    block_begin -> function_block_begin
Rule 58    if_block_begin -> IF rel_expression THEN
Rule 59    else_statement -> ELSE
Rule 60    elseif_block_begin -> ELSEIF rel_expression THEN
Rule 61    while_block_begin -> WHILE rel_expression
Rule 62    do_block_begin -> DO
Rule 63    for_block_begin -> FOR ID EQUALS expression TO expression
Rule 64    for_block_begin -> FOR ID EQUALS expression TO expression STEP expression
Rule 65    function_block_begin -> SUB ID LPAREN params_list RPAREN
Rule 66    function_block_begin -> FUNCTION ID LPAREN params_list RPAREN
Rule 67    function_block_begin -> SUB ID LPAREN RPAREN
Rule 68    function_block_begin -> FUNCTION ID LPAREN RPAREN
Rule 69    block_end -> END IF
Rule 70    block_end -> END WHILE
Rule 71    block_end -> WEND
Rule 72    block_end -> END FOR
Rule 73    block_end -> NEXT ID
Rule 74    block_end -> LOOP
Rule 75    block_end -> LOOP WHILE rel_expression
Rule 76    block_end -> LOOP UNTIL rel_expression
Rule 77    block_end -> END SUB
Rule 78    block_end -> END FUNCTION
Rule 79    return -> RETURN
Rule 80    return -> RETURN expression
Rule 81    control -> EXIT WHILE
Rule 82    control -> EXIT DO
Rule 83    control -> EXIT FOR
Rule 84    control -> CONTINUE WHILE
Rule 85    control -> CONTINUE DO
Rule 86    control -> CONTINUE FOR
Rule 87    statement -> USE ID

Terminals, with rules where they appear

AND                  : 32
AS                   : 25 42
COLON                : 1
COMMA                : 14 16
CONTINUE             : 84 85 86
DECIMAL              : 50
DEFUN                : 18
DIM                  : 25
DIVIDE               : 39
DO                   : 62 82 85
DOT                  : 23 44
ELSE                 : 59
ELSEIF               : 60
END                  : 69 70 72 77 78
EQUALS               : 18 20 21 22 23 30 63 64
EQUAL_GREATER_THAN   : 28
EQUAL_LESS_THAN      : 29
EXACTDIV             : 40
EXIT                 : 81 82 83
EXP                  : 43
FOR                  : 63 64 72 83 86
FUNCTION             : 66 68 78
GREATER_THAN         : 26
ID                   : 16 17 18 19 20 21 22 23 25 25 44 47 48 52 63 64 65 66 67 68 73 87
IF                   : 58 69
INTEGER              : 49
LBRACE               : 53
LESS_THAN            : 27
LET                  : 21
LOOP                 : 74 75 76
LPAREN               : 18 22 25 34 46 47 48 65 66 67 68
MINUS                : 37 45
MOD                  : 41
NEXT                 : 73
NOT                  : 35
NOT_EQUAL            : 31
OR                   : 33
PLUS                 : 36
RBRACE               : 53
RETURN               : 79 80
RPAREN               : 18 22 25 34 46 47 48 65 66 67 68
STEP                 : 64
STRING               : 51
SUB                  : 65 67 77
THEN                 : 58 60
TIMES                : 38
TO                   : 63 64
UNTIL                : 76
USE                  : 87
WEND                 : 71
WHILE                : 61 70 75 81 84
error                : 

Nonterminals, with rules where they appear

args_list            : 14 19 48 53
assignment           : 2
block_begin          : 9
block_end            : 10
control              : 5
declaration          : 3
declare_array        : 24
defun_statement      : 7
do_block_begin       : 56
else_statement       : 13
elseif_block_begin   : 12
expression           : 8 14 15 18 20 21 22 22 23 23 25 26 26 27 27 28 28 29 29 30 30 31 31 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 45 46 63 63 64 64 64 80
for_block_begin      : 55
funcall              : 4
function_block_begin : 57
if_block_begin       : 11
params_list          : 16 18 65 66
rel_expression       : 32 32 33 33 34 35 58 60 61 75 76
return               : 6
statement            : 1 1 0
while_block_begin    : 54

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement COLON statement
    (2) statement -> . assignment
    (3) statement -> . declaration
    (4) statement -> . funcall
    (5) statement -> . control
    (6) statement -> . return
    (7) statement -> . defun_statement
    (8) statement -> . expression
    (9) statement -> . block_begin
    (10) statement -> . block_end
    (11) statement -> . if_block_begin
    (12) statement -> . elseif_block_begin
    (13) statement -> . else_statement
    (87) statement -> . USE ID
    (20) assignment -> . ID EQUALS expression
    (21) assignment -> . LET ID EQUALS expression
    (22) assignment -> . ID LPAREN expression RPAREN EQUALS expression
    (23) assignment -> . expression DOT ID EQUALS expression
    (24) declaration -> . declare_array
    (19) funcall -> . ID args_list
    (81) control -> . EXIT WHILE
    (82) control -> . EXIT DO
    (83) control -> . EXIT FOR
    (84) control -> . CONTINUE WHILE
    (85) control -> . CONTINUE DO
    (86) control -> . CONTINUE FOR
    (79) return -> . RETURN
    (80) return -> . RETURN expression
    (18) defun_statement -> . DEFUN ID LPAREN params_list RPAREN EQUALS expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE
    (54) block_begin -> . while_block_begin
    (55) block_begin -> . for_block_begin
    (56) block_begin -> . do_block_begin
    (57) block_begin -> . function_block_begin
    (69) block_end -> . END IF
    (70) block_end -> . END WHILE
    (71) block_end -> . WEND
    (72) block_end -> . END FOR
    (73) block_end -> . NEXT ID
    (74) block_end -> . LOOP
    (75) block_end -> . LOOP WHILE rel_expression
    (76) block_end -> . LOOP UNTIL rel_expression
    (77) block_end -> . END SUB
    (78) block_end -> . END FUNCTION
    (58) if_block_begin -> . IF rel_expression THEN
    (60) elseif_block_begin -> . ELSEIF rel_expression THEN
    (59) else_statement -> . ELSE
    (25) declare_array -> . DIM ID LPAREN expression RPAREN AS ID
    (61) while_block_begin -> . WHILE rel_expression
    (63) for_block_begin -> . FOR ID EQUALS expression TO expression
    (64) for_block_begin -> . FOR ID EQUALS expression TO expression STEP expression
    (62) do_block_begin -> . DO
    (65) function_block_begin -> . SUB ID LPAREN params_list RPAREN
    (66) function_block_begin -> . FUNCTION ID LPAREN params_list RPAREN
    (67) function_block_begin -> . SUB ID LPAREN RPAREN
    (68) function_block_begin -> . FUNCTION ID LPAREN RPAREN

    USE             shift and go to state 14
    ID              shift and go to state 15
    LET             shift and go to state 16
    EXIT            shift and go to state 19
    CONTINUE        shift and go to state 23
    RETURN          shift and go to state 24
    DEFUN           shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30
    END             shift and go to state 35
    WEND            shift and go to state 37
    NEXT            shift and go to state 38
    LOOP            shift and go to state 39
    IF              shift and go to state 36
    ELSEIF          shift and go to state 42
    ELSE            shift and go to state 43
    DIM             shift and go to state 44
    WHILE           shift and go to state 20
    FOR             shift and go to state 22
    DO              shift and go to state 21
    SUB             shift and go to state 40
    FUNCTION        shift and go to state 41

    statement                      shift and go to state 1
    assignment                     shift and go to state 2
    declaration                    shift and go to state 3
    funcall                        shift and go to state 4
    control                        shift and go to state 5
    return                         shift and go to state 6
    defun_statement                shift and go to state 7
    expression                     shift and go to state 8
    block_begin                    shift and go to state 9
    block_end                      shift and go to state 10
    if_block_begin                 shift and go to state 11
    elseif_block_begin             shift and go to state 12
    else_statement                 shift and go to state 13
    declare_array                  shift and go to state 18
    while_block_begin              shift and go to state 31
    for_block_begin                shift and go to state 32
    do_block_begin                 shift and go to state 33
    function_block_begin           shift and go to state 34

state 1

    (0) S' -> statement .
    (1) statement -> statement . COLON statement

    COLON           shift and go to state 45


state 2

    (2) statement -> assignment .

    COLON           reduce using rule 2 (statement -> assignment .)
    $end            reduce using rule 2 (statement -> assignment .)


state 3

    (3) statement -> declaration .

    COLON           reduce using rule 3 (statement -> declaration .)
    $end            reduce using rule 3 (statement -> declaration .)


state 4

    (4) statement -> funcall .

    COLON           reduce using rule 4 (statement -> funcall .)
    $end            reduce using rule 4 (statement -> funcall .)


state 5

    (5) statement -> control .

    COLON           reduce using rule 5 (statement -> control .)
    $end            reduce using rule 5 (statement -> control .)


state 6

    (6) statement -> return .

    COLON           reduce using rule 6 (statement -> return .)
    $end            reduce using rule 6 (statement -> return .)


state 7

    (7) statement -> defun_statement .

    COLON           reduce using rule 7 (statement -> defun_statement .)
    $end            reduce using rule 7 (statement -> defun_statement .)


state 8

    (8) statement -> expression .
    (23) assignment -> expression . DOT ID EQUALS expression
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 8 (statement -> expression .)
    $end            reduce using rule 8 (statement -> expression .)
    DOT             shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54


state 9

    (9) statement -> block_begin .

    COLON           reduce using rule 9 (statement -> block_begin .)
    $end            reduce using rule 9 (statement -> block_begin .)


state 10

    (10) statement -> block_end .

    COLON           reduce using rule 10 (statement -> block_end .)
    $end            reduce using rule 10 (statement -> block_end .)


state 11

    (11) statement -> if_block_begin .

    COLON           reduce using rule 11 (statement -> if_block_begin .)
    $end            reduce using rule 11 (statement -> if_block_begin .)


state 12

    (12) statement -> elseif_block_begin .

    COLON           reduce using rule 12 (statement -> elseif_block_begin .)
    $end            reduce using rule 12 (statement -> elseif_block_begin .)


state 13

    (13) statement -> else_statement .

    COLON           reduce using rule 13 (statement -> else_statement .)
    $end            reduce using rule 13 (statement -> else_statement .)


state 14

    (87) statement -> USE . ID

    ID              shift and go to state 55


state 15

    (20) assignment -> ID . EQUALS expression
    (22) assignment -> ID . LPAREN expression RPAREN EQUALS expression
    (19) funcall -> ID . args_list
    (47) expression -> ID . LPAREN RPAREN
    (48) expression -> ID . LPAREN args_list RPAREN
    (52) expression -> ID .
    (14) args_list -> . args_list COMMA expression
    (15) args_list -> . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

  ! shift/reduce conflict for MINUS resolved as shift
    EQUALS          shift and go to state 57
    LPAREN          shift and go to state 59
    DOT             reduce using rule 52 (expression -> ID .)
    PLUS            reduce using rule 52 (expression -> ID .)
    TIMES           reduce using rule 52 (expression -> ID .)
    DIVIDE          reduce using rule 52 (expression -> ID .)
    EXACTDIV        reduce using rule 52 (expression -> ID .)
    MOD             reduce using rule 52 (expression -> ID .)
    AS              reduce using rule 52 (expression -> ID .)
    EXP             reduce using rule 52 (expression -> ID .)
    COLON           reduce using rule 52 (expression -> ID .)
    $end            reduce using rule 52 (expression -> ID .)
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

  ! MINUS           [ reduce using rule 52 (expression -> ID .) ]

    expression                     shift and go to state 58
    args_list                      shift and go to state 60

state 16

    (21) assignment -> LET . ID EQUALS expression

    ID              shift and go to state 61


state 17

    (46) expression -> LPAREN . expression RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 62

state 18

    (24) declaration -> declare_array .

    COLON           reduce using rule 24 (declaration -> declare_array .)
    $end            reduce using rule 24 (declaration -> declare_array .)


state 19

    (81) control -> EXIT . WHILE
    (82) control -> EXIT . DO
    (83) control -> EXIT . FOR

    WHILE           shift and go to state 63
    DO              shift and go to state 64
    FOR             shift and go to state 65


state 20

    (61) while_block_begin -> WHILE . rel_expression
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 66
    expression                     shift and go to state 67

state 21

    (62) do_block_begin -> DO .

    COLON           reduce using rule 62 (do_block_begin -> DO .)
    $end            reduce using rule 62 (do_block_begin -> DO .)


state 22

    (63) for_block_begin -> FOR . ID EQUALS expression TO expression
    (64) for_block_begin -> FOR . ID EQUALS expression TO expression STEP expression

    ID              shift and go to state 70


state 23

    (84) control -> CONTINUE . WHILE
    (85) control -> CONTINUE . DO
    (86) control -> CONTINUE . FOR

    WHILE           shift and go to state 71
    DO              shift and go to state 72
    FOR             shift and go to state 73


state 24

    (79) return -> RETURN .
    (80) return -> RETURN . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    COLON           reduce using rule 79 (return -> RETURN .)
    $end            reduce using rule 79 (return -> RETURN .)
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 74

state 25

    (18) defun_statement -> DEFUN . ID LPAREN params_list RPAREN EQUALS expression

    ID              shift and go to state 75


state 26

    (45) expression -> MINUS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 76

state 27

    (49) expression -> INTEGER .

    DOT             reduce using rule 49 (expression -> INTEGER .)
    PLUS            reduce using rule 49 (expression -> INTEGER .)
    MINUS           reduce using rule 49 (expression -> INTEGER .)
    TIMES           reduce using rule 49 (expression -> INTEGER .)
    DIVIDE          reduce using rule 49 (expression -> INTEGER .)
    EXACTDIV        reduce using rule 49 (expression -> INTEGER .)
    MOD             reduce using rule 49 (expression -> INTEGER .)
    AS              reduce using rule 49 (expression -> INTEGER .)
    EXP             reduce using rule 49 (expression -> INTEGER .)
    COLON           reduce using rule 49 (expression -> INTEGER .)
    $end            reduce using rule 49 (expression -> INTEGER .)
    COMMA           reduce using rule 49 (expression -> INTEGER .)
    RPAREN          reduce using rule 49 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 49 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 49 (expression -> INTEGER .)
    EQUAL_GREATER_THAN reduce using rule 49 (expression -> INTEGER .)
    EQUAL_LESS_THAN reduce using rule 49 (expression -> INTEGER .)
    EQUALS          reduce using rule 49 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 49 (expression -> INTEGER .)
    RBRACE          reduce using rule 49 (expression -> INTEGER .)
    AND             reduce using rule 49 (expression -> INTEGER .)
    OR              reduce using rule 49 (expression -> INTEGER .)
    THEN            reduce using rule 49 (expression -> INTEGER .)
    TO              reduce using rule 49 (expression -> INTEGER .)
    STEP            reduce using rule 49 (expression -> INTEGER .)


state 28

    (50) expression -> DECIMAL .

    DOT             reduce using rule 50 (expression -> DECIMAL .)
    PLUS            reduce using rule 50 (expression -> DECIMAL .)
    MINUS           reduce using rule 50 (expression -> DECIMAL .)
    TIMES           reduce using rule 50 (expression -> DECIMAL .)
    DIVIDE          reduce using rule 50 (expression -> DECIMAL .)
    EXACTDIV        reduce using rule 50 (expression -> DECIMAL .)
    MOD             reduce using rule 50 (expression -> DECIMAL .)
    AS              reduce using rule 50 (expression -> DECIMAL .)
    EXP             reduce using rule 50 (expression -> DECIMAL .)
    COLON           reduce using rule 50 (expression -> DECIMAL .)
    $end            reduce using rule 50 (expression -> DECIMAL .)
    COMMA           reduce using rule 50 (expression -> DECIMAL .)
    RPAREN          reduce using rule 50 (expression -> DECIMAL .)
    GREATER_THAN    reduce using rule 50 (expression -> DECIMAL .)
    LESS_THAN       reduce using rule 50 (expression -> DECIMAL .)
    EQUAL_GREATER_THAN reduce using rule 50 (expression -> DECIMAL .)
    EQUAL_LESS_THAN reduce using rule 50 (expression -> DECIMAL .)
    EQUALS          reduce using rule 50 (expression -> DECIMAL .)
    NOT_EQUAL       reduce using rule 50 (expression -> DECIMAL .)
    RBRACE          reduce using rule 50 (expression -> DECIMAL .)
    AND             reduce using rule 50 (expression -> DECIMAL .)
    OR              reduce using rule 50 (expression -> DECIMAL .)
    THEN            reduce using rule 50 (expression -> DECIMAL .)
    TO              reduce using rule 50 (expression -> DECIMAL .)
    STEP            reduce using rule 50 (expression -> DECIMAL .)


state 29

    (51) expression -> STRING .

    DOT             reduce using rule 51 (expression -> STRING .)
    PLUS            reduce using rule 51 (expression -> STRING .)
    MINUS           reduce using rule 51 (expression -> STRING .)
    TIMES           reduce using rule 51 (expression -> STRING .)
    DIVIDE          reduce using rule 51 (expression -> STRING .)
    EXACTDIV        reduce using rule 51 (expression -> STRING .)
    MOD             reduce using rule 51 (expression -> STRING .)
    AS              reduce using rule 51 (expression -> STRING .)
    EXP             reduce using rule 51 (expression -> STRING .)
    COLON           reduce using rule 51 (expression -> STRING .)
    $end            reduce using rule 51 (expression -> STRING .)
    COMMA           reduce using rule 51 (expression -> STRING .)
    RPAREN          reduce using rule 51 (expression -> STRING .)
    GREATER_THAN    reduce using rule 51 (expression -> STRING .)
    LESS_THAN       reduce using rule 51 (expression -> STRING .)
    EQUAL_GREATER_THAN reduce using rule 51 (expression -> STRING .)
    EQUAL_LESS_THAN reduce using rule 51 (expression -> STRING .)
    EQUALS          reduce using rule 51 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 51 (expression -> STRING .)
    RBRACE          reduce using rule 51 (expression -> STRING .)
    AND             reduce using rule 51 (expression -> STRING .)
    OR              reduce using rule 51 (expression -> STRING .)
    THEN            reduce using rule 51 (expression -> STRING .)
    TO              reduce using rule 51 (expression -> STRING .)
    STEP            reduce using rule 51 (expression -> STRING .)


state 30

    (53) expression -> LBRACE . args_list RBRACE
    (14) args_list -> . args_list COMMA expression
    (15) args_list -> . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    args_list                      shift and go to state 77
    expression                     shift and go to state 58

state 31

    (54) block_begin -> while_block_begin .

    COLON           reduce using rule 54 (block_begin -> while_block_begin .)
    $end            reduce using rule 54 (block_begin -> while_block_begin .)


state 32

    (55) block_begin -> for_block_begin .

    COLON           reduce using rule 55 (block_begin -> for_block_begin .)
    $end            reduce using rule 55 (block_begin -> for_block_begin .)


state 33

    (56) block_begin -> do_block_begin .

    COLON           reduce using rule 56 (block_begin -> do_block_begin .)
    $end            reduce using rule 56 (block_begin -> do_block_begin .)


state 34

    (57) block_begin -> function_block_begin .

    COLON           reduce using rule 57 (block_begin -> function_block_begin .)
    $end            reduce using rule 57 (block_begin -> function_block_begin .)


state 35

    (69) block_end -> END . IF
    (70) block_end -> END . WHILE
    (72) block_end -> END . FOR
    (77) block_end -> END . SUB
    (78) block_end -> END . FUNCTION

    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FOR             shift and go to state 80
    SUB             shift and go to state 81
    FUNCTION        shift and go to state 82


state 36

    (58) if_block_begin -> IF . rel_expression THEN
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 83
    expression                     shift and go to state 67

state 37

    (71) block_end -> WEND .

    COLON           reduce using rule 71 (block_end -> WEND .)
    $end            reduce using rule 71 (block_end -> WEND .)


state 38

    (73) block_end -> NEXT . ID

    ID              shift and go to state 84


state 39

    (74) block_end -> LOOP .
    (75) block_end -> LOOP . WHILE rel_expression
    (76) block_end -> LOOP . UNTIL rel_expression

    COLON           reduce using rule 74 (block_end -> LOOP .)
    $end            reduce using rule 74 (block_end -> LOOP .)
    WHILE           shift and go to state 85
    UNTIL           shift and go to state 86


state 40

    (65) function_block_begin -> SUB . ID LPAREN params_list RPAREN
    (67) function_block_begin -> SUB . ID LPAREN RPAREN

    ID              shift and go to state 87


state 41

    (66) function_block_begin -> FUNCTION . ID LPAREN params_list RPAREN
    (68) function_block_begin -> FUNCTION . ID LPAREN RPAREN

    ID              shift and go to state 88


state 42

    (60) elseif_block_begin -> ELSEIF . rel_expression THEN
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 89
    expression                     shift and go to state 67

state 43

    (59) else_statement -> ELSE .

    COLON           reduce using rule 59 (else_statement -> ELSE .)
    $end            reduce using rule 59 (else_statement -> ELSE .)


state 44

    (25) declare_array -> DIM . ID LPAREN expression RPAREN AS ID

    ID              shift and go to state 90


state 45

    (1) statement -> statement COLON . statement
    (1) statement -> . statement COLON statement
    (2) statement -> . assignment
    (3) statement -> . declaration
    (4) statement -> . funcall
    (5) statement -> . control
    (6) statement -> . return
    (7) statement -> . defun_statement
    (8) statement -> . expression
    (9) statement -> . block_begin
    (10) statement -> . block_end
    (11) statement -> . if_block_begin
    (12) statement -> . elseif_block_begin
    (13) statement -> . else_statement
    (87) statement -> . USE ID
    (20) assignment -> . ID EQUALS expression
    (21) assignment -> . LET ID EQUALS expression
    (22) assignment -> . ID LPAREN expression RPAREN EQUALS expression
    (23) assignment -> . expression DOT ID EQUALS expression
    (24) declaration -> . declare_array
    (19) funcall -> . ID args_list
    (81) control -> . EXIT WHILE
    (82) control -> . EXIT DO
    (83) control -> . EXIT FOR
    (84) control -> . CONTINUE WHILE
    (85) control -> . CONTINUE DO
    (86) control -> . CONTINUE FOR
    (79) return -> . RETURN
    (80) return -> . RETURN expression
    (18) defun_statement -> . DEFUN ID LPAREN params_list RPAREN EQUALS expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE
    (54) block_begin -> . while_block_begin
    (55) block_begin -> . for_block_begin
    (56) block_begin -> . do_block_begin
    (57) block_begin -> . function_block_begin
    (69) block_end -> . END IF
    (70) block_end -> . END WHILE
    (71) block_end -> . WEND
    (72) block_end -> . END FOR
    (73) block_end -> . NEXT ID
    (74) block_end -> . LOOP
    (75) block_end -> . LOOP WHILE rel_expression
    (76) block_end -> . LOOP UNTIL rel_expression
    (77) block_end -> . END SUB
    (78) block_end -> . END FUNCTION
    (58) if_block_begin -> . IF rel_expression THEN
    (60) elseif_block_begin -> . ELSEIF rel_expression THEN
    (59) else_statement -> . ELSE
    (25) declare_array -> . DIM ID LPAREN expression RPAREN AS ID
    (61) while_block_begin -> . WHILE rel_expression
    (63) for_block_begin -> . FOR ID EQUALS expression TO expression
    (64) for_block_begin -> . FOR ID EQUALS expression TO expression STEP expression
    (62) do_block_begin -> . DO
    (65) function_block_begin -> . SUB ID LPAREN params_list RPAREN
    (66) function_block_begin -> . FUNCTION ID LPAREN params_list RPAREN
    (67) function_block_begin -> . SUB ID LPAREN RPAREN
    (68) function_block_begin -> . FUNCTION ID LPAREN RPAREN

    USE             shift and go to state 14
    ID              shift and go to state 15
    LET             shift and go to state 16
    EXIT            shift and go to state 19
    CONTINUE        shift and go to state 23
    RETURN          shift and go to state 24
    DEFUN           shift and go to state 25
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30
    END             shift and go to state 35
    WEND            shift and go to state 37
    NEXT            shift and go to state 38
    LOOP            shift and go to state 39
    IF              shift and go to state 36
    ELSEIF          shift and go to state 42
    ELSE            shift and go to state 43
    DIM             shift and go to state 44
    WHILE           shift and go to state 20
    FOR             shift and go to state 22
    DO              shift and go to state 21
    SUB             shift and go to state 40
    FUNCTION        shift and go to state 41

    statement                      shift and go to state 91
    assignment                     shift and go to state 2
    declaration                    shift and go to state 3
    funcall                        shift and go to state 4
    control                        shift and go to state 5
    return                         shift and go to state 6
    defun_statement                shift and go to state 7
    expression                     shift and go to state 8
    block_begin                    shift and go to state 9
    block_end                      shift and go to state 10
    if_block_begin                 shift and go to state 11
    elseif_block_begin             shift and go to state 12
    else_statement                 shift and go to state 13
    declare_array                  shift and go to state 18
    while_block_begin              shift and go to state 31
    for_block_begin                shift and go to state 32
    do_block_begin                 shift and go to state 33
    function_block_begin           shift and go to state 34

state 46

    (23) assignment -> expression DOT . ID EQUALS expression
    (44) expression -> expression DOT . ID

    ID              shift and go to state 92


state 47

    (36) expression -> expression PLUS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 93

state 48

    (37) expression -> expression MINUS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 94

state 49

    (38) expression -> expression TIMES . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 95

state 50

    (39) expression -> expression DIVIDE . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 96

state 51

    (40) expression -> expression EXACTDIV . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 97

state 52

    (41) expression -> expression MOD . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 98

state 53

    (42) expression -> expression AS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 99

state 54

    (43) expression -> expression EXP . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 100

state 55

    (87) statement -> USE ID .

    COLON           reduce using rule 87 (statement -> USE ID .)
    $end            reduce using rule 87 (statement -> USE ID .)


state 56

    (47) expression -> ID . LPAREN RPAREN
    (48) expression -> ID . LPAREN args_list RPAREN
    (52) expression -> ID .

    LPAREN          shift and go to state 101
    PLUS            reduce using rule 52 (expression -> ID .)
    MINUS           reduce using rule 52 (expression -> ID .)
    TIMES           reduce using rule 52 (expression -> ID .)
    DIVIDE          reduce using rule 52 (expression -> ID .)
    EXACTDIV        reduce using rule 52 (expression -> ID .)
    MOD             reduce using rule 52 (expression -> ID .)
    AS              reduce using rule 52 (expression -> ID .)
    EXP             reduce using rule 52 (expression -> ID .)
    DOT             reduce using rule 52 (expression -> ID .)
    COMMA           reduce using rule 52 (expression -> ID .)
    COLON           reduce using rule 52 (expression -> ID .)
    $end            reduce using rule 52 (expression -> ID .)
    RPAREN          reduce using rule 52 (expression -> ID .)
    GREATER_THAN    reduce using rule 52 (expression -> ID .)
    LESS_THAN       reduce using rule 52 (expression -> ID .)
    EQUAL_GREATER_THAN reduce using rule 52 (expression -> ID .)
    EQUAL_LESS_THAN reduce using rule 52 (expression -> ID .)
    EQUALS          reduce using rule 52 (expression -> ID .)
    NOT_EQUAL       reduce using rule 52 (expression -> ID .)
    RBRACE          reduce using rule 52 (expression -> ID .)
    AND             reduce using rule 52 (expression -> ID .)
    OR              reduce using rule 52 (expression -> ID .)
    THEN            reduce using rule 52 (expression -> ID .)
    TO              reduce using rule 52 (expression -> ID .)
    STEP            reduce using rule 52 (expression -> ID .)


state 57

    (20) assignment -> ID EQUALS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 102

state 58

    (15) args_list -> expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COMMA           reduce using rule 15 (args_list -> expression .)
    COLON           reduce using rule 15 (args_list -> expression .)
    $end            reduce using rule 15 (args_list -> expression .)
    RBRACE          reduce using rule 15 (args_list -> expression .)
    RPAREN          reduce using rule 15 (args_list -> expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 59

    (22) assignment -> ID LPAREN . expression RPAREN EQUALS expression
    (47) expression -> ID LPAREN . RPAREN
    (48) expression -> ID LPAREN . args_list RPAREN
    (46) expression -> LPAREN . expression RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE
    (14) args_list -> . args_list COMMA expression
    (15) args_list -> . expression

    RPAREN          shift and go to state 105
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 104
    args_list                      shift and go to state 106

state 60

    (19) funcall -> ID args_list .
    (14) args_list -> args_list . COMMA expression

    COLON           reduce using rule 19 (funcall -> ID args_list .)
    $end            reduce using rule 19 (funcall -> ID args_list .)
    COMMA           shift and go to state 107


state 61

    (21) assignment -> LET ID . EQUALS expression

    EQUALS          shift and go to state 108


state 62

    (46) expression -> LPAREN expression . RPAREN
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    RPAREN          shift and go to state 109
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 63

    (81) control -> EXIT WHILE .

    COLON           reduce using rule 81 (control -> EXIT WHILE .)
    $end            reduce using rule 81 (control -> EXIT WHILE .)


state 64

    (82) control -> EXIT DO .

    COLON           reduce using rule 82 (control -> EXIT DO .)
    $end            reduce using rule 82 (control -> EXIT DO .)


state 65

    (83) control -> EXIT FOR .

    COLON           reduce using rule 83 (control -> EXIT FOR .)
    $end            reduce using rule 83 (control -> EXIT FOR .)


state 66

    (61) while_block_begin -> WHILE rel_expression .
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 61 (while_block_begin -> WHILE rel_expression .)
    $end            reduce using rule 61 (while_block_begin -> WHILE rel_expression .)
    AND             shift and go to state 110
    OR              shift and go to state 111


state 67

    (26) rel_expression -> expression . GREATER_THAN expression
    (27) rel_expression -> expression . LESS_THAN expression
    (28) rel_expression -> expression . EQUAL_GREATER_THAN expression
    (29) rel_expression -> expression . EQUAL_LESS_THAN expression
    (30) rel_expression -> expression . EQUALS expression
    (31) rel_expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    GREATER_THAN    shift and go to state 112
    LESS_THAN       shift and go to state 113
    EQUAL_GREATER_THAN shift and go to state 114
    EQUAL_LESS_THAN shift and go to state 115
    EQUALS          shift and go to state 116
    NOT_EQUAL       shift and go to state 117
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 68

    (34) rel_expression -> LPAREN . rel_expression RPAREN
    (46) expression -> LPAREN . expression RPAREN
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 118
    expression                     shift and go to state 119

state 69

    (35) rel_expression -> NOT . rel_expression
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 120
    expression                     shift and go to state 67

state 70

    (63) for_block_begin -> FOR ID . EQUALS expression TO expression
    (64) for_block_begin -> FOR ID . EQUALS expression TO expression STEP expression

    EQUALS          shift and go to state 121


state 71

    (84) control -> CONTINUE WHILE .

    COLON           reduce using rule 84 (control -> CONTINUE WHILE .)
    $end            reduce using rule 84 (control -> CONTINUE WHILE .)


state 72

    (85) control -> CONTINUE DO .

    COLON           reduce using rule 85 (control -> CONTINUE DO .)
    $end            reduce using rule 85 (control -> CONTINUE DO .)


state 73

    (86) control -> CONTINUE FOR .

    COLON           reduce using rule 86 (control -> CONTINUE FOR .)
    $end            reduce using rule 86 (control -> CONTINUE FOR .)


state 74

    (80) return -> RETURN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 80 (return -> RETURN expression .)
    $end            reduce using rule 80 (return -> RETURN expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 75

    (18) defun_statement -> DEFUN ID . LPAREN params_list RPAREN EQUALS expression

    LPAREN          shift and go to state 122


state 76

    (45) expression -> MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    PLUS            reduce using rule 45 (expression -> MINUS expression .)
    MINUS           reduce using rule 45 (expression -> MINUS expression .)
    TIMES           reduce using rule 45 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 45 (expression -> MINUS expression .)
    EXACTDIV        reduce using rule 45 (expression -> MINUS expression .)
    MOD             reduce using rule 45 (expression -> MINUS expression .)
    AS              reduce using rule 45 (expression -> MINUS expression .)
    EXP             reduce using rule 45 (expression -> MINUS expression .)
    COLON           reduce using rule 45 (expression -> MINUS expression .)
    $end            reduce using rule 45 (expression -> MINUS expression .)
    COMMA           reduce using rule 45 (expression -> MINUS expression .)
    RPAREN          reduce using rule 45 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 45 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 45 (expression -> MINUS expression .)
    EQUAL_GREATER_THAN reduce using rule 45 (expression -> MINUS expression .)
    EQUAL_LESS_THAN reduce using rule 45 (expression -> MINUS expression .)
    EQUALS          reduce using rule 45 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> MINUS expression .)
    RBRACE          reduce using rule 45 (expression -> MINUS expression .)
    AND             reduce using rule 45 (expression -> MINUS expression .)
    OR              reduce using rule 45 (expression -> MINUS expression .)
    THEN            reduce using rule 45 (expression -> MINUS expression .)
    TO              reduce using rule 45 (expression -> MINUS expression .)
    STEP            reduce using rule 45 (expression -> MINUS expression .)
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 45 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 48 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! MOD             [ shift and go to state 52 ]
  ! AS              [ shift and go to state 53 ]
  ! EXP             [ shift and go to state 54 ]


state 77

    (53) expression -> LBRACE args_list . RBRACE
    (14) args_list -> args_list . COMMA expression

    RBRACE          shift and go to state 123
    COMMA           shift and go to state 107


state 78

    (69) block_end -> END IF .

    COLON           reduce using rule 69 (block_end -> END IF .)
    $end            reduce using rule 69 (block_end -> END IF .)


state 79

    (70) block_end -> END WHILE .

    COLON           reduce using rule 70 (block_end -> END WHILE .)
    $end            reduce using rule 70 (block_end -> END WHILE .)


state 80

    (72) block_end -> END FOR .

    COLON           reduce using rule 72 (block_end -> END FOR .)
    $end            reduce using rule 72 (block_end -> END FOR .)


state 81

    (77) block_end -> END SUB .

    COLON           reduce using rule 77 (block_end -> END SUB .)
    $end            reduce using rule 77 (block_end -> END SUB .)


state 82

    (78) block_end -> END FUNCTION .

    COLON           reduce using rule 78 (block_end -> END FUNCTION .)
    $end            reduce using rule 78 (block_end -> END FUNCTION .)


state 83

    (58) if_block_begin -> IF rel_expression . THEN
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    THEN            shift and go to state 124
    AND             shift and go to state 110
    OR              shift and go to state 111


state 84

    (73) block_end -> NEXT ID .

    COLON           reduce using rule 73 (block_end -> NEXT ID .)
    $end            reduce using rule 73 (block_end -> NEXT ID .)


state 85

    (75) block_end -> LOOP WHILE . rel_expression
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 125
    expression                     shift and go to state 67

state 86

    (76) block_end -> LOOP UNTIL . rel_expression
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 126
    expression                     shift and go to state 67

state 87

    (65) function_block_begin -> SUB ID . LPAREN params_list RPAREN
    (67) function_block_begin -> SUB ID . LPAREN RPAREN

    LPAREN          shift and go to state 127


state 88

    (66) function_block_begin -> FUNCTION ID . LPAREN params_list RPAREN
    (68) function_block_begin -> FUNCTION ID . LPAREN RPAREN

    LPAREN          shift and go to state 128


state 89

    (60) elseif_block_begin -> ELSEIF rel_expression . THEN
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    THEN            shift and go to state 129
    AND             shift and go to state 110
    OR              shift and go to state 111


state 90

    (25) declare_array -> DIM ID . LPAREN expression RPAREN AS ID

    LPAREN          shift and go to state 130


state 91

    (1) statement -> statement COLON statement .
    (1) statement -> statement . COLON statement

    COLON           reduce using rule 1 (statement -> statement COLON statement .)
    $end            reduce using rule 1 (statement -> statement COLON statement .)

  ! COLON           [ shift and go to state 45 ]


state 92

    (23) assignment -> expression DOT ID . EQUALS expression
    (44) expression -> expression DOT ID .

    EQUALS          shift and go to state 131
    DOT             reduce using rule 44 (expression -> expression DOT ID .)
    PLUS            reduce using rule 44 (expression -> expression DOT ID .)
    MINUS           reduce using rule 44 (expression -> expression DOT ID .)
    TIMES           reduce using rule 44 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 44 (expression -> expression DOT ID .)
    EXACTDIV        reduce using rule 44 (expression -> expression DOT ID .)
    MOD             reduce using rule 44 (expression -> expression DOT ID .)
    AS              reduce using rule 44 (expression -> expression DOT ID .)
    EXP             reduce using rule 44 (expression -> expression DOT ID .)
    COLON           reduce using rule 44 (expression -> expression DOT ID .)
    $end            reduce using rule 44 (expression -> expression DOT ID .)


state 93

    (36) expression -> expression PLUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    PLUS            reduce using rule 36 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 36 (expression -> expression PLUS expression .)
    EXACTDIV        reduce using rule 36 (expression -> expression PLUS expression .)
    AS              reduce using rule 36 (expression -> expression PLUS expression .)
    COLON           reduce using rule 36 (expression -> expression PLUS expression .)
    $end            reduce using rule 36 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 36 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 36 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 36 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 36 (expression -> expression PLUS expression .)
    EQUAL_GREATER_THAN reduce using rule 36 (expression -> expression PLUS expression .)
    EQUAL_LESS_THAN reduce using rule 36 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 36 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 36 (expression -> expression PLUS expression .)
    AND             reduce using rule 36 (expression -> expression PLUS expression .)
    OR              reduce using rule 36 (expression -> expression PLUS expression .)
    THEN            reduce using rule 36 (expression -> expression PLUS expression .)
    TO              reduce using rule 36 (expression -> expression PLUS expression .)
    STEP            reduce using rule 36 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    MOD             shift and go to state 52
    EXP             shift and go to state 54
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! EXP             [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 48 ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! AS              [ shift and go to state 53 ]


state 94

    (37) expression -> expression MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    PLUS            reduce using rule 37 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 37 (expression -> expression MINUS expression .)
    EXACTDIV        reduce using rule 37 (expression -> expression MINUS expression .)
    AS              reduce using rule 37 (expression -> expression MINUS expression .)
    COLON           reduce using rule 37 (expression -> expression MINUS expression .)
    $end            reduce using rule 37 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 37 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 37 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 37 (expression -> expression MINUS expression .)
    EQUAL_GREATER_THAN reduce using rule 37 (expression -> expression MINUS expression .)
    EQUAL_LESS_THAN reduce using rule 37 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 37 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 37 (expression -> expression MINUS expression .)
    AND             reduce using rule 37 (expression -> expression MINUS expression .)
    OR              reduce using rule 37 (expression -> expression MINUS expression .)
    THEN            reduce using rule 37 (expression -> expression MINUS expression .)
    TO              reduce using rule 37 (expression -> expression MINUS expression .)
    STEP            reduce using rule 37 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    MOD             shift and go to state 52
    EXP             shift and go to state 54
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 48 ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! AS              [ shift and go to state 53 ]


state 95

    (38) expression -> expression TIMES expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    PLUS            reduce using rule 38 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 38 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 38 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 38 (expression -> expression TIMES expression .)
    EXACTDIV        reduce using rule 38 (expression -> expression TIMES expression .)
    MOD             reduce using rule 38 (expression -> expression TIMES expression .)
    AS              reduce using rule 38 (expression -> expression TIMES expression .)
    COLON           reduce using rule 38 (expression -> expression TIMES expression .)
    $end            reduce using rule 38 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 38 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 38 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 38 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 38 (expression -> expression TIMES expression .)
    EQUAL_GREATER_THAN reduce using rule 38 (expression -> expression TIMES expression .)
    EQUAL_LESS_THAN reduce using rule 38 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 38 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 38 (expression -> expression TIMES expression .)
    AND             reduce using rule 38 (expression -> expression TIMES expression .)
    OR              reduce using rule 38 (expression -> expression TIMES expression .)
    THEN            reduce using rule 38 (expression -> expression TIMES expression .)
    TO              reduce using rule 38 (expression -> expression TIMES expression .)
    STEP            reduce using rule 38 (expression -> expression TIMES expression .)
    EXP             shift and go to state 54
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 38 (expression -> expression TIMES expression .) ]
  ! EXP             [ reduce using rule 38 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 48 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! MOD             [ shift and go to state 52 ]
  ! AS              [ shift and go to state 53 ]


state 96

    (39) expression -> expression DIVIDE expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    PLUS            reduce using rule 39 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 39 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 39 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 39 (expression -> expression DIVIDE expression .)
    EXACTDIV        reduce using rule 39 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 39 (expression -> expression DIVIDE expression .)
    AS              reduce using rule 39 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 39 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 39 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 39 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 39 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 39 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 39 (expression -> expression DIVIDE expression .)
    EQUAL_GREATER_THAN reduce using rule 39 (expression -> expression DIVIDE expression .)
    EQUAL_LESS_THAN reduce using rule 39 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 39 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 39 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 39 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 39 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 39 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 39 (expression -> expression DIVIDE expression .)
    STEP            reduce using rule 39 (expression -> expression DIVIDE expression .)
    EXP             shift and go to state 54
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 39 (expression -> expression DIVIDE expression .) ]
  ! EXP             [ reduce using rule 39 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 48 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! MOD             [ shift and go to state 52 ]
  ! AS              [ shift and go to state 53 ]


state 97

    (40) expression -> expression EXACTDIV expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXACTDIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COLON           reduce using rule 40 (expression -> expression EXACTDIV expression .)
    $end            reduce using rule 40 (expression -> expression EXACTDIV expression .)
    COMMA           reduce using rule 40 (expression -> expression EXACTDIV expression .)
    RPAREN          reduce using rule 40 (expression -> expression EXACTDIV expression .)
    GREATER_THAN    reduce using rule 40 (expression -> expression EXACTDIV expression .)
    LESS_THAN       reduce using rule 40 (expression -> expression EXACTDIV expression .)
    EQUAL_GREATER_THAN reduce using rule 40 (expression -> expression EXACTDIV expression .)
    EQUAL_LESS_THAN reduce using rule 40 (expression -> expression EXACTDIV expression .)
    EQUALS          reduce using rule 40 (expression -> expression EXACTDIV expression .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression EXACTDIV expression .)
    RBRACE          reduce using rule 40 (expression -> expression EXACTDIV expression .)
    AND             reduce using rule 40 (expression -> expression EXACTDIV expression .)
    OR              reduce using rule 40 (expression -> expression EXACTDIV expression .)
    THEN            reduce using rule 40 (expression -> expression EXACTDIV expression .)
    TO              reduce using rule 40 (expression -> expression EXACTDIV expression .)
    STEP            reduce using rule 40 (expression -> expression EXACTDIV expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! EXACTDIV        [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! MOD             [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! AS              [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]
  ! EXP             [ reduce using rule 40 (expression -> expression EXACTDIV expression .) ]


state 98

    (41) expression -> expression MOD expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    PLUS            reduce using rule 41 (expression -> expression MOD expression .)
    MINUS           reduce using rule 41 (expression -> expression MOD expression .)
    TIMES           reduce using rule 41 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 41 (expression -> expression MOD expression .)
    EXACTDIV        reduce using rule 41 (expression -> expression MOD expression .)
    MOD             reduce using rule 41 (expression -> expression MOD expression .)
    AS              reduce using rule 41 (expression -> expression MOD expression .)
    COLON           reduce using rule 41 (expression -> expression MOD expression .)
    $end            reduce using rule 41 (expression -> expression MOD expression .)
    COMMA           reduce using rule 41 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 41 (expression -> expression MOD expression .)
    GREATER_THAN    reduce using rule 41 (expression -> expression MOD expression .)
    LESS_THAN       reduce using rule 41 (expression -> expression MOD expression .)
    EQUAL_GREATER_THAN reduce using rule 41 (expression -> expression MOD expression .)
    EQUAL_LESS_THAN reduce using rule 41 (expression -> expression MOD expression .)
    EQUALS          reduce using rule 41 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 41 (expression -> expression MOD expression .)
    AND             reduce using rule 41 (expression -> expression MOD expression .)
    OR              reduce using rule 41 (expression -> expression MOD expression .)
    THEN            reduce using rule 41 (expression -> expression MOD expression .)
    TO              reduce using rule 41 (expression -> expression MOD expression .)
    STEP            reduce using rule 41 (expression -> expression MOD expression .)
    EXP             shift and go to state 54
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 41 (expression -> expression MOD expression .) ]
  ! EXP             [ reduce using rule 41 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 48 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! MOD             [ shift and go to state 52 ]
  ! AS              [ shift and go to state 53 ]


state 99

    (42) expression -> expression AS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    EXACTDIV        reduce using rule 42 (expression -> expression AS expression .)
    AS              reduce using rule 42 (expression -> expression AS expression .)
    COLON           reduce using rule 42 (expression -> expression AS expression .)
    $end            reduce using rule 42 (expression -> expression AS expression .)
    COMMA           reduce using rule 42 (expression -> expression AS expression .)
    RPAREN          reduce using rule 42 (expression -> expression AS expression .)
    GREATER_THAN    reduce using rule 42 (expression -> expression AS expression .)
    LESS_THAN       reduce using rule 42 (expression -> expression AS expression .)
    EQUAL_GREATER_THAN reduce using rule 42 (expression -> expression AS expression .)
    EQUAL_LESS_THAN reduce using rule 42 (expression -> expression AS expression .)
    EQUALS          reduce using rule 42 (expression -> expression AS expression .)
    NOT_EQUAL       reduce using rule 42 (expression -> expression AS expression .)
    RBRACE          reduce using rule 42 (expression -> expression AS expression .)
    AND             reduce using rule 42 (expression -> expression AS expression .)
    OR              reduce using rule 42 (expression -> expression AS expression .)
    THEN            reduce using rule 42 (expression -> expression AS expression .)
    TO              reduce using rule 42 (expression -> expression AS expression .)
    STEP            reduce using rule 42 (expression -> expression AS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    MOD             shift and go to state 52
    EXP             shift and go to state 54
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 42 (expression -> expression AS expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression AS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression AS expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression AS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression AS expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> expression AS expression .) ]
  ! EXP             [ reduce using rule 42 (expression -> expression AS expression .) ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! AS              [ shift and go to state 53 ]


state 100

    (43) expression -> expression EXP expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    PLUS            reduce using rule 43 (expression -> expression EXP expression .)
    MINUS           reduce using rule 43 (expression -> expression EXP expression .)
    TIMES           reduce using rule 43 (expression -> expression EXP expression .)
    DIVIDE          reduce using rule 43 (expression -> expression EXP expression .)
    EXACTDIV        reduce using rule 43 (expression -> expression EXP expression .)
    MOD             reduce using rule 43 (expression -> expression EXP expression .)
    AS              reduce using rule 43 (expression -> expression EXP expression .)
    EXP             reduce using rule 43 (expression -> expression EXP expression .)
    COLON           reduce using rule 43 (expression -> expression EXP expression .)
    $end            reduce using rule 43 (expression -> expression EXP expression .)
    COMMA           reduce using rule 43 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 43 (expression -> expression EXP expression .)
    GREATER_THAN    reduce using rule 43 (expression -> expression EXP expression .)
    LESS_THAN       reduce using rule 43 (expression -> expression EXP expression .)
    EQUAL_GREATER_THAN reduce using rule 43 (expression -> expression EXP expression .)
    EQUAL_LESS_THAN reduce using rule 43 (expression -> expression EXP expression .)
    EQUALS          reduce using rule 43 (expression -> expression EXP expression .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression EXP expression .)
    RBRACE          reduce using rule 43 (expression -> expression EXP expression .)
    AND             reduce using rule 43 (expression -> expression EXP expression .)
    OR              reduce using rule 43 (expression -> expression EXP expression .)
    THEN            reduce using rule 43 (expression -> expression EXP expression .)
    TO              reduce using rule 43 (expression -> expression EXP expression .)
    STEP            reduce using rule 43 (expression -> expression EXP expression .)
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 43 (expression -> expression EXP expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 48 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 50 ]
  ! EXACTDIV        [ shift and go to state 51 ]
  ! MOD             [ shift and go to state 52 ]
  ! AS              [ shift and go to state 53 ]
  ! EXP             [ shift and go to state 54 ]


state 101

    (47) expression -> ID LPAREN . RPAREN
    (48) expression -> ID LPAREN . args_list RPAREN
    (14) args_list -> . args_list COMMA expression
    (15) args_list -> . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    RPAREN          shift and go to state 105
    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    args_list                      shift and go to state 106
    expression                     shift and go to state 58

state 102

    (20) assignment -> ID EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 20 (assignment -> ID EQUALS expression .)
    $end            reduce using rule 20 (assignment -> ID EQUALS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 103

    (44) expression -> expression DOT . ID

    ID              shift and go to state 132


state 104

    (22) assignment -> ID LPAREN expression . RPAREN EQUALS expression
    (46) expression -> LPAREN expression . RPAREN
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID
    (15) args_list -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 133
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103
    COMMA           reduce using rule 15 (args_list -> expression .)

  ! RPAREN          [ reduce using rule 15 (args_list -> expression .) ]


state 105

    (47) expression -> ID LPAREN RPAREN .

    DOT             reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    EXACTDIV        reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    MOD             reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    AS              reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    EXP             reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    COLON           reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    $end            reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    EQUAL_LESS_THAN reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    AND             reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    OR              reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    THEN            reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    TO              reduce using rule 47 (expression -> ID LPAREN RPAREN .)
    STEP            reduce using rule 47 (expression -> ID LPAREN RPAREN .)


state 106

    (48) expression -> ID LPAREN args_list . RPAREN
    (14) args_list -> args_list . COMMA expression

    RPAREN          shift and go to state 134
    COMMA           shift and go to state 107


state 107

    (14) args_list -> args_list COMMA . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 135

state 108

    (21) assignment -> LET ID EQUALS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 136

state 109

    (46) expression -> LPAREN expression RPAREN .

    DOT             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EXACTDIV        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    AS              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EQUAL_LESS_THAN reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    STEP            reduce using rule 46 (expression -> LPAREN expression RPAREN .)


state 110

    (32) rel_expression -> rel_expression AND . rel_expression
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 137
    expression                     shift and go to state 67

state 111

    (33) rel_expression -> rel_expression OR . rel_expression
    (26) rel_expression -> . expression GREATER_THAN expression
    (27) rel_expression -> . expression LESS_THAN expression
    (28) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (29) rel_expression -> . expression EQUAL_LESS_THAN expression
    (30) rel_expression -> . expression EQUALS expression
    (31) rel_expression -> . expression NOT_EQUAL expression
    (32) rel_expression -> . rel_expression AND rel_expression
    (33) rel_expression -> . rel_expression OR rel_expression
    (34) rel_expression -> . LPAREN rel_expression RPAREN
    (35) rel_expression -> . NOT rel_expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 68
    NOT             shift and go to state 69
    MINUS           shift and go to state 26
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    rel_expression                 shift and go to state 138
    expression                     shift and go to state 67

state 112

    (26) rel_expression -> expression GREATER_THAN . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 139

state 113

    (27) rel_expression -> expression LESS_THAN . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 140

state 114

    (28) rel_expression -> expression EQUAL_GREATER_THAN . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 141

state 115

    (29) rel_expression -> expression EQUAL_LESS_THAN . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 142

state 116

    (30) rel_expression -> expression EQUALS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 143

state 117

    (31) rel_expression -> expression NOT_EQUAL . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 144

state 118

    (34) rel_expression -> LPAREN rel_expression . RPAREN
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    RPAREN          shift and go to state 145
    AND             shift and go to state 110
    OR              shift and go to state 111


state 119

    (46) expression -> LPAREN expression . RPAREN
    (26) rel_expression -> expression . GREATER_THAN expression
    (27) rel_expression -> expression . LESS_THAN expression
    (28) rel_expression -> expression . EQUAL_GREATER_THAN expression
    (29) rel_expression -> expression . EQUAL_LESS_THAN expression
    (30) rel_expression -> expression . EQUALS expression
    (31) rel_expression -> expression . NOT_EQUAL expression
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    RPAREN          shift and go to state 109
    GREATER_THAN    shift and go to state 112
    LESS_THAN       shift and go to state 113
    EQUAL_GREATER_THAN shift and go to state 114
    EQUAL_LESS_THAN shift and go to state 115
    EQUALS          shift and go to state 116
    NOT_EQUAL       shift and go to state 117
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 120

    (35) rel_expression -> NOT rel_expression .
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 35 (rel_expression -> NOT rel_expression .)
    OR              reduce using rule 35 (rel_expression -> NOT rel_expression .)
    COLON           reduce using rule 35 (rel_expression -> NOT rel_expression .)
    $end            reduce using rule 35 (rel_expression -> NOT rel_expression .)
    THEN            reduce using rule 35 (rel_expression -> NOT rel_expression .)
    RPAREN          reduce using rule 35 (rel_expression -> NOT rel_expression .)

  ! AND             [ shift and go to state 110 ]
  ! OR              [ shift and go to state 111 ]


state 121

    (63) for_block_begin -> FOR ID EQUALS . expression TO expression
    (64) for_block_begin -> FOR ID EQUALS . expression TO expression STEP expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 146

state 122

    (18) defun_statement -> DEFUN ID LPAREN . params_list RPAREN EQUALS expression
    (16) params_list -> . params_list COMMA ID
    (17) params_list -> . ID

    ID              shift and go to state 147

    params_list                    shift and go to state 148

state 123

    (53) expression -> LBRACE args_list RBRACE .

    DOT             reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    PLUS            reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    MINUS           reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    TIMES           reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    DIVIDE          reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    EXACTDIV        reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    MOD             reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    AS              reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    EXP             reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    COLON           reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    $end            reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    COMMA           reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    RPAREN          reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    GREATER_THAN    reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    LESS_THAN       reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    EQUAL_GREATER_THAN reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    EQUAL_LESS_THAN reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    EQUALS          reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    NOT_EQUAL       reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    RBRACE          reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    AND             reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    OR              reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    THEN            reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    TO              reduce using rule 53 (expression -> LBRACE args_list RBRACE .)
    STEP            reduce using rule 53 (expression -> LBRACE args_list RBRACE .)


state 124

    (58) if_block_begin -> IF rel_expression THEN .

    COLON           reduce using rule 58 (if_block_begin -> IF rel_expression THEN .)
    $end            reduce using rule 58 (if_block_begin -> IF rel_expression THEN .)


state 125

    (75) block_end -> LOOP WHILE rel_expression .
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 75 (block_end -> LOOP WHILE rel_expression .)
    $end            reduce using rule 75 (block_end -> LOOP WHILE rel_expression .)
    AND             shift and go to state 110
    OR              shift and go to state 111


state 126

    (76) block_end -> LOOP UNTIL rel_expression .
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 76 (block_end -> LOOP UNTIL rel_expression .)
    $end            reduce using rule 76 (block_end -> LOOP UNTIL rel_expression .)
    AND             shift and go to state 110
    OR              shift and go to state 111


state 127

    (65) function_block_begin -> SUB ID LPAREN . params_list RPAREN
    (67) function_block_begin -> SUB ID LPAREN . RPAREN
    (16) params_list -> . params_list COMMA ID
    (17) params_list -> . ID

    RPAREN          shift and go to state 150
    ID              shift and go to state 147

    params_list                    shift and go to state 149

state 128

    (66) function_block_begin -> FUNCTION ID LPAREN . params_list RPAREN
    (68) function_block_begin -> FUNCTION ID LPAREN . RPAREN
    (16) params_list -> . params_list COMMA ID
    (17) params_list -> . ID

    RPAREN          shift and go to state 152
    ID              shift and go to state 147

    params_list                    shift and go to state 151

state 129

    (60) elseif_block_begin -> ELSEIF rel_expression THEN .

    COLON           reduce using rule 60 (elseif_block_begin -> ELSEIF rel_expression THEN .)
    $end            reduce using rule 60 (elseif_block_begin -> ELSEIF rel_expression THEN .)


state 130

    (25) declare_array -> DIM ID LPAREN . expression RPAREN AS ID
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 153

state 131

    (23) assignment -> expression DOT ID EQUALS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 154

state 132

    (44) expression -> expression DOT ID .

    PLUS            reduce using rule 44 (expression -> expression DOT ID .)
    MINUS           reduce using rule 44 (expression -> expression DOT ID .)
    TIMES           reduce using rule 44 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 44 (expression -> expression DOT ID .)
    EXACTDIV        reduce using rule 44 (expression -> expression DOT ID .)
    MOD             reduce using rule 44 (expression -> expression DOT ID .)
    AS              reduce using rule 44 (expression -> expression DOT ID .)
    EXP             reduce using rule 44 (expression -> expression DOT ID .)
    DOT             reduce using rule 44 (expression -> expression DOT ID .)
    COMMA           reduce using rule 44 (expression -> expression DOT ID .)
    COLON           reduce using rule 44 (expression -> expression DOT ID .)
    $end            reduce using rule 44 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 44 (expression -> expression DOT ID .)
    GREATER_THAN    reduce using rule 44 (expression -> expression DOT ID .)
    LESS_THAN       reduce using rule 44 (expression -> expression DOT ID .)
    EQUAL_GREATER_THAN reduce using rule 44 (expression -> expression DOT ID .)
    EQUAL_LESS_THAN reduce using rule 44 (expression -> expression DOT ID .)
    EQUALS          reduce using rule 44 (expression -> expression DOT ID .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 44 (expression -> expression DOT ID .)
    AND             reduce using rule 44 (expression -> expression DOT ID .)
    OR              reduce using rule 44 (expression -> expression DOT ID .)
    THEN            reduce using rule 44 (expression -> expression DOT ID .)
    TO              reduce using rule 44 (expression -> expression DOT ID .)
    STEP            reduce using rule 44 (expression -> expression DOT ID .)


state 133

    (22) assignment -> ID LPAREN expression RPAREN . EQUALS expression
    (46) expression -> LPAREN expression RPAREN .

    EQUALS          shift and go to state 155
    PLUS            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EXACTDIV        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    AS              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 46 (expression -> LPAREN expression RPAREN .)


state 134

    (48) expression -> ID LPAREN args_list RPAREN .

    DOT             reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    PLUS            reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    MINUS           reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    TIMES           reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    EXACTDIV        reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    MOD             reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    AS              reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    EXP             reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    COLON           reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    $end            reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    COMMA           reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    RPAREN          reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    GREATER_THAN    reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    LESS_THAN       reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    EQUAL_LESS_THAN reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    EQUALS          reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    NOT_EQUAL       reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    RBRACE          reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    AND             reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    OR              reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    THEN            reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    TO              reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)
    STEP            reduce using rule 48 (expression -> ID LPAREN args_list RPAREN .)


state 135

    (14) args_list -> args_list COMMA expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COMMA           reduce using rule 14 (args_list -> args_list COMMA expression .)
    COLON           reduce using rule 14 (args_list -> args_list COMMA expression .)
    $end            reduce using rule 14 (args_list -> args_list COMMA expression .)
    RBRACE          reduce using rule 14 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 14 (args_list -> args_list COMMA expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 136

    (21) assignment -> LET ID EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 21 (assignment -> LET ID EQUALS expression .)
    $end            reduce using rule 21 (assignment -> LET ID EQUALS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 137

    (32) rel_expression -> rel_expression AND rel_expression .
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 32 (rel_expression -> rel_expression AND rel_expression .)
    OR              reduce using rule 32 (rel_expression -> rel_expression AND rel_expression .)
    COLON           reduce using rule 32 (rel_expression -> rel_expression AND rel_expression .)
    $end            reduce using rule 32 (rel_expression -> rel_expression AND rel_expression .)
    THEN            reduce using rule 32 (rel_expression -> rel_expression AND rel_expression .)
    RPAREN          reduce using rule 32 (rel_expression -> rel_expression AND rel_expression .)

  ! AND             [ shift and go to state 110 ]
  ! OR              [ shift and go to state 111 ]


state 138

    (33) rel_expression -> rel_expression OR rel_expression .
    (32) rel_expression -> rel_expression . AND rel_expression
    (33) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 33 (rel_expression -> rel_expression OR rel_expression .)
    OR              reduce using rule 33 (rel_expression -> rel_expression OR rel_expression .)
    COLON           reduce using rule 33 (rel_expression -> rel_expression OR rel_expression .)
    $end            reduce using rule 33 (rel_expression -> rel_expression OR rel_expression .)
    THEN            reduce using rule 33 (rel_expression -> rel_expression OR rel_expression .)
    RPAREN          reduce using rule 33 (rel_expression -> rel_expression OR rel_expression .)

  ! AND             [ shift and go to state 110 ]
  ! OR              [ shift and go to state 111 ]


state 139

    (26) rel_expression -> expression GREATER_THAN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    AND             reduce using rule 26 (rel_expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 26 (rel_expression -> expression GREATER_THAN expression .)
    COLON           reduce using rule 26 (rel_expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 26 (rel_expression -> expression GREATER_THAN expression .)
    THEN            reduce using rule 26 (rel_expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 26 (rel_expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 140

    (27) rel_expression -> expression LESS_THAN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    AND             reduce using rule 27 (rel_expression -> expression LESS_THAN expression .)
    OR              reduce using rule 27 (rel_expression -> expression LESS_THAN expression .)
    COLON           reduce using rule 27 (rel_expression -> expression LESS_THAN expression .)
    $end            reduce using rule 27 (rel_expression -> expression LESS_THAN expression .)
    THEN            reduce using rule 27 (rel_expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 27 (rel_expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 141

    (28) rel_expression -> expression EQUAL_GREATER_THAN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    AND             reduce using rule 28 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    OR              reduce using rule 28 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    COLON           reduce using rule 28 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    $end            reduce using rule 28 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    THEN            reduce using rule 28 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    RPAREN          reduce using rule 28 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 142

    (29) rel_expression -> expression EQUAL_LESS_THAN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    AND             reduce using rule 29 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    OR              reduce using rule 29 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    COLON           reduce using rule 29 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    $end            reduce using rule 29 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    THEN            reduce using rule 29 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    RPAREN          reduce using rule 29 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 143

    (30) rel_expression -> expression EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    AND             reduce using rule 30 (rel_expression -> expression EQUALS expression .)
    OR              reduce using rule 30 (rel_expression -> expression EQUALS expression .)
    COLON           reduce using rule 30 (rel_expression -> expression EQUALS expression .)
    $end            reduce using rule 30 (rel_expression -> expression EQUALS expression .)
    THEN            reduce using rule 30 (rel_expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 30 (rel_expression -> expression EQUALS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 144

    (31) rel_expression -> expression NOT_EQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    AND             reduce using rule 31 (rel_expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 31 (rel_expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 31 (rel_expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 31 (rel_expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 31 (rel_expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 31 (rel_expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 145

    (34) rel_expression -> LPAREN rel_expression RPAREN .

    AND             reduce using rule 34 (rel_expression -> LPAREN rel_expression RPAREN .)
    OR              reduce using rule 34 (rel_expression -> LPAREN rel_expression RPAREN .)
    COLON           reduce using rule 34 (rel_expression -> LPAREN rel_expression RPAREN .)
    $end            reduce using rule 34 (rel_expression -> LPAREN rel_expression RPAREN .)
    THEN            reduce using rule 34 (rel_expression -> LPAREN rel_expression RPAREN .)
    RPAREN          reduce using rule 34 (rel_expression -> LPAREN rel_expression RPAREN .)


state 146

    (63) for_block_begin -> FOR ID EQUALS expression . TO expression
    (64) for_block_begin -> FOR ID EQUALS expression . TO expression STEP expression
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    TO              shift and go to state 156
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 147

    (17) params_list -> ID .

    RPAREN          reduce using rule 17 (params_list -> ID .)
    COMMA           reduce using rule 17 (params_list -> ID .)


state 148

    (18) defun_statement -> DEFUN ID LPAREN params_list . RPAREN EQUALS expression
    (16) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 157
    COMMA           shift and go to state 158


state 149

    (65) function_block_begin -> SUB ID LPAREN params_list . RPAREN
    (16) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 159
    COMMA           shift and go to state 158


state 150

    (67) function_block_begin -> SUB ID LPAREN RPAREN .

    COLON           reduce using rule 67 (function_block_begin -> SUB ID LPAREN RPAREN .)
    $end            reduce using rule 67 (function_block_begin -> SUB ID LPAREN RPAREN .)


state 151

    (66) function_block_begin -> FUNCTION ID LPAREN params_list . RPAREN
    (16) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 160
    COMMA           shift and go to state 158


state 152

    (68) function_block_begin -> FUNCTION ID LPAREN RPAREN .

    COLON           reduce using rule 68 (function_block_begin -> FUNCTION ID LPAREN RPAREN .)
    $end            reduce using rule 68 (function_block_begin -> FUNCTION ID LPAREN RPAREN .)


state 153

    (25) declare_array -> DIM ID LPAREN expression . RPAREN AS ID
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    RPAREN          shift and go to state 161
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 154

    (23) assignment -> expression DOT ID EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 23 (assignment -> expression DOT ID EQUALS expression .)
    $end            reduce using rule 23 (assignment -> expression DOT ID EQUALS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 155

    (22) assignment -> ID LPAREN expression RPAREN EQUALS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 162

state 156

    (63) for_block_begin -> FOR ID EQUALS expression TO . expression
    (64) for_block_begin -> FOR ID EQUALS expression TO . expression STEP expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 163

state 157

    (18) defun_statement -> DEFUN ID LPAREN params_list RPAREN . EQUALS expression

    EQUALS          shift and go to state 164


state 158

    (16) params_list -> params_list COMMA . ID

    ID              shift and go to state 165


state 159

    (65) function_block_begin -> SUB ID LPAREN params_list RPAREN .

    COLON           reduce using rule 65 (function_block_begin -> SUB ID LPAREN params_list RPAREN .)
    $end            reduce using rule 65 (function_block_begin -> SUB ID LPAREN params_list RPAREN .)


state 160

    (66) function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .

    COLON           reduce using rule 66 (function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .)
    $end            reduce using rule 66 (function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .)


state 161

    (25) declare_array -> DIM ID LPAREN expression RPAREN . AS ID

    AS              shift and go to state 166


state 162

    (22) assignment -> ID LPAREN expression RPAREN EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 22 (assignment -> ID LPAREN expression RPAREN EQUALS expression .)
    $end            reduce using rule 22 (assignment -> ID LPAREN expression RPAREN EQUALS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 163

    (63) for_block_begin -> FOR ID EQUALS expression TO expression .
    (64) for_block_begin -> FOR ID EQUALS expression TO expression . STEP expression
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 63 (for_block_begin -> FOR ID EQUALS expression TO expression .)
    $end            reduce using rule 63 (for_block_begin -> FOR ID EQUALS expression TO expression .)
    STEP            shift and go to state 167
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 164

    (18) defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 168

state 165

    (16) params_list -> params_list COMMA ID .

    RPAREN          reduce using rule 16 (params_list -> params_list COMMA ID .)
    COMMA           reduce using rule 16 (params_list -> params_list COMMA ID .)


state 166

    (25) declare_array -> DIM ID LPAREN expression RPAREN AS . ID

    ID              shift and go to state 169


state 167

    (64) for_block_begin -> FOR ID EQUALS expression TO expression STEP . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression TIMES expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression EXACTDIV expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression AS expression
    (43) expression -> . expression EXP expression
    (44) expression -> . expression DOT ID
    (45) expression -> . MINUS expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . ID LPAREN RPAREN
    (48) expression -> . ID LPAREN args_list RPAREN
    (49) expression -> . INTEGER
    (50) expression -> . DECIMAL
    (51) expression -> . STRING
    (52) expression -> . ID
    (53) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 26
    LPAREN          shift and go to state 17
    ID              shift and go to state 56
    INTEGER         shift and go to state 27
    DECIMAL         shift and go to state 28
    STRING          shift and go to state 29
    LBRACE          shift and go to state 30

    expression                     shift and go to state 170

state 168

    (18) defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 18 (defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .)
    $end            reduce using rule 18 (defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103


state 169

    (25) declare_array -> DIM ID LPAREN expression RPAREN AS ID .

    COLON           reduce using rule 25 (declare_array -> DIM ID LPAREN expression RPAREN AS ID .)
    $end            reduce using rule 25 (declare_array -> DIM ID LPAREN expression RPAREN AS ID .)


state 170

    (64) for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . TIMES expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . EXACTDIV expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . AS expression
    (43) expression -> expression . EXP expression
    (44) expression -> expression . DOT ID

    COLON           reduce using rule 64 (for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .)
    $end            reduce using rule 64 (for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EXACTDIV        shift and go to state 51
    MOD             shift and go to state 52
    AS              shift and go to state 53
    EXP             shift and go to state 54
    DOT             shift and go to state 103

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for EXACTDIV in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD in state 97 resolved as shift
WARNING: shift/reduce conflict for AS in state 97 resolved as shift
WARNING: shift/reduce conflict for EXP in state 97 resolved as shift
WARNING: shift/reduce conflict for DOT in state 97 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 104 resolved as shift
