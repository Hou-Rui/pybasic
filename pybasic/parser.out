Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement COLON statement
Rule 2     statement -> assignment
Rule 3     statement -> declaration
Rule 4     statement -> funcall
Rule 5     statement -> control
Rule 6     statement -> return
Rule 7     statement -> defun_statement
Rule 8     statement -> expression
Rule 9     statement -> block_begin
Rule 10    statement -> block_end
Rule 11    statement -> if_block_begin
Rule 12    statement -> elseif_block_begin
Rule 13    statement -> else_statement
Rule 14    statement -> case_begin
Rule 15    statement -> case_else_begin
Rule 16    args_list -> args_list COMMA expression
Rule 17    args_list -> expression
Rule 18    params_list -> params_list COMMA ID
Rule 19    params_list -> ID
Rule 20    defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression
Rule 21    funcall -> ID args_list
Rule 22    assignment -> ID EQUALS expression
Rule 23    assignment -> LET ID EQUALS expression
Rule 24    assignment -> ID LPAREN expression RPAREN EQUALS expression
Rule 25    assignment -> expression DOT ID EQUALS expression
Rule 26    declaration -> declare_array
Rule 27    declare_array -> DIM ID LPAREN expression RPAREN AS ID
Rule 28    rel_expression -> expression GREATER_THAN expression
Rule 29    rel_expression -> expression LESS_THAN expression
Rule 30    rel_expression -> expression EQUAL_GREATER_THAN expression
Rule 31    rel_expression -> expression EQUAL_LESS_THAN expression
Rule 32    rel_expression -> expression EQUALS expression
Rule 33    rel_expression -> expression NOT_EQUAL expression
Rule 34    rel_expression -> rel_expression AND rel_expression
Rule 35    rel_expression -> rel_expression OR rel_expression
Rule 36    rel_expression -> LPAREN rel_expression RPAREN
Rule 37    rel_expression -> NOT rel_expression
Rule 38    expression -> expression PLUS expression
Rule 39    expression -> expression MINUS expression
Rule 40    expression -> expression TIMES expression
Rule 41    expression -> expression DIVIDE expression
Rule 42    expression -> expression EXACTDIV expression
Rule 43    expression -> expression MOD expression
Rule 44    expression -> expression AS expression
Rule 45    expression -> expression EXP expression
Rule 46    expression -> expression DOT ID
Rule 47    expression -> MINUS expression
Rule 48    expression -> LPAREN expression RPAREN
Rule 49    expression -> ID LPAREN RPAREN
Rule 50    expression -> ID LPAREN args_list RPAREN
Rule 51    expression -> INTEGER
Rule 52    expression -> DECIMAL
Rule 53    expression -> STRING
Rule 54    expression -> ID
Rule 55    expression -> LBRACE args_list RBRACE
Rule 56    block_begin -> while_block_begin
Rule 57    block_begin -> for_block_begin
Rule 58    block_begin -> do_block_begin
Rule 59    block_begin -> function_block_begin
Rule 60    if_block_begin -> IF rel_expression THEN
Rule 61    else_statement -> ELSE
Rule 62    elseif_block_begin -> ELSEIF rel_expression THEN
Rule 63    statement -> SELECT CASE expression
Rule 64    statement -> SELECT expression
Rule 65    case_begin -> CASE expression
Rule 66    case_else_begin -> CASE ELSE
Rule 67    while_block_begin -> WHILE rel_expression
Rule 68    do_block_begin -> DO
Rule 69    for_block_begin -> FOR ID EQUALS expression TO expression
Rule 70    for_block_begin -> FOR ID EQUALS expression TO expression STEP expression
Rule 71    function_block_begin -> SUB ID LPAREN params_list RPAREN
Rule 72    function_block_begin -> FUNCTION ID LPAREN params_list RPAREN
Rule 73    function_block_begin -> SUB ID LPAREN RPAREN
Rule 74    function_block_begin -> FUNCTION ID LPAREN RPAREN
Rule 75    block_end -> END IF
Rule 76    block_end -> END SELECT
Rule 77    block_end -> END WHILE
Rule 78    block_end -> WEND
Rule 79    block_end -> END FOR
Rule 80    block_end -> NEXT ID
Rule 81    block_end -> LOOP
Rule 82    block_end -> LOOP WHILE rel_expression
Rule 83    block_end -> LOOP UNTIL rel_expression
Rule 84    block_end -> END SUB
Rule 85    block_end -> END FUNCTION
Rule 86    return -> RETURN
Rule 87    return -> RETURN expression
Rule 88    control -> EXIT WHILE
Rule 89    control -> EXIT DO
Rule 90    control -> EXIT FOR
Rule 91    control -> CONTINUE WHILE
Rule 92    control -> CONTINUE DO
Rule 93    control -> CONTINUE FOR
Rule 94    statement -> USE ID

Terminals, with rules where they appear

AND                  : 34
AS                   : 27 44
CASE                 : 63 65 66
COLON                : 1
COMMA                : 16 18
CONTINUE             : 91 92 93
DECIMAL              : 52
DEFUN                : 20
DIM                  : 27
DIVIDE               : 41
DO                   : 68 89 92
DOT                  : 25 46
ELSE                 : 61 66
ELSEIF               : 62
END                  : 75 76 77 79 84 85
EQUALS               : 20 22 23 24 25 32 69 70
EQUAL_GREATER_THAN   : 30
EQUAL_LESS_THAN      : 31
EXACTDIV             : 42
EXIT                 : 88 89 90
EXP                  : 45
FOR                  : 69 70 79 90 93
FUNCTION             : 72 74 85
GREATER_THAN         : 28
ID                   : 18 19 20 21 22 23 24 25 27 27 46 49 50 54 69 70 71 72 73 74 80 94
IF                   : 60 75
INTEGER              : 51
LBRACE               : 55
LESS_THAN            : 29
LET                  : 23
LOOP                 : 81 82 83
LPAREN               : 20 24 27 36 48 49 50 71 72 73 74
MINUS                : 39 47
MOD                  : 43
NEXT                 : 80
NOT                  : 37
NOT_EQUAL            : 33
OR                   : 35
PLUS                 : 38
RBRACE               : 55
RETURN               : 86 87
RPAREN               : 20 24 27 36 48 49 50 71 72 73 74
SELECT               : 63 64 76
STEP                 : 70
STRING               : 53
SUB                  : 71 73 84
THEN                 : 60 62
TIMES                : 40
TO                   : 69 70
UNTIL                : 83
USE                  : 94
WEND                 : 78
WHILE                : 67 77 82 88 91
error                : 

Nonterminals, with rules where they appear

args_list            : 16 21 50 55
assignment           : 2
block_begin          : 9
block_end            : 10
case_begin           : 14
case_else_begin      : 15
control              : 5
declaration          : 3
declare_array        : 26
defun_statement      : 7
do_block_begin       : 58
else_statement       : 13
elseif_block_begin   : 12
expression           : 8 16 17 20 22 23 24 24 25 25 27 28 28 29 29 30 30 31 31 32 32 33 33 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 47 48 63 64 65 69 69 70 70 70 87
for_block_begin      : 57
funcall              : 4
function_block_begin : 59
if_block_begin       : 11
params_list          : 18 20 71 72
rel_expression       : 34 34 35 35 36 37 60 62 67 82 83
return               : 6
statement            : 1 1 0
while_block_begin    : 56

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement COLON statement
    (2) statement -> . assignment
    (3) statement -> . declaration
    (4) statement -> . funcall
    (5) statement -> . control
    (6) statement -> . return
    (7) statement -> . defun_statement
    (8) statement -> . expression
    (9) statement -> . block_begin
    (10) statement -> . block_end
    (11) statement -> . if_block_begin
    (12) statement -> . elseif_block_begin
    (13) statement -> . else_statement
    (14) statement -> . case_begin
    (15) statement -> . case_else_begin
    (63) statement -> . SELECT CASE expression
    (64) statement -> . SELECT expression
    (94) statement -> . USE ID
    (22) assignment -> . ID EQUALS expression
    (23) assignment -> . LET ID EQUALS expression
    (24) assignment -> . ID LPAREN expression RPAREN EQUALS expression
    (25) assignment -> . expression DOT ID EQUALS expression
    (26) declaration -> . declare_array
    (21) funcall -> . ID args_list
    (88) control -> . EXIT WHILE
    (89) control -> . EXIT DO
    (90) control -> . EXIT FOR
    (91) control -> . CONTINUE WHILE
    (92) control -> . CONTINUE DO
    (93) control -> . CONTINUE FOR
    (86) return -> . RETURN
    (87) return -> . RETURN expression
    (20) defun_statement -> . DEFUN ID LPAREN params_list RPAREN EQUALS expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE
    (56) block_begin -> . while_block_begin
    (57) block_begin -> . for_block_begin
    (58) block_begin -> . do_block_begin
    (59) block_begin -> . function_block_begin
    (75) block_end -> . END IF
    (76) block_end -> . END SELECT
    (77) block_end -> . END WHILE
    (78) block_end -> . WEND
    (79) block_end -> . END FOR
    (80) block_end -> . NEXT ID
    (81) block_end -> . LOOP
    (82) block_end -> . LOOP WHILE rel_expression
    (83) block_end -> . LOOP UNTIL rel_expression
    (84) block_end -> . END SUB
    (85) block_end -> . END FUNCTION
    (60) if_block_begin -> . IF rel_expression THEN
    (62) elseif_block_begin -> . ELSEIF rel_expression THEN
    (61) else_statement -> . ELSE
    (65) case_begin -> . CASE expression
    (66) case_else_begin -> . CASE ELSE
    (27) declare_array -> . DIM ID LPAREN expression RPAREN AS ID
    (67) while_block_begin -> . WHILE rel_expression
    (69) for_block_begin -> . FOR ID EQUALS expression TO expression
    (70) for_block_begin -> . FOR ID EQUALS expression TO expression STEP expression
    (68) do_block_begin -> . DO
    (71) function_block_begin -> . SUB ID LPAREN params_list RPAREN
    (72) function_block_begin -> . FUNCTION ID LPAREN params_list RPAREN
    (73) function_block_begin -> . SUB ID LPAREN RPAREN
    (74) function_block_begin -> . FUNCTION ID LPAREN RPAREN

    SELECT          shift and go to state 16
    USE             shift and go to state 18
    ID              shift and go to state 19
    LET             shift and go to state 20
    EXIT            shift and go to state 23
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    DEFUN           shift and go to state 29
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34
    END             shift and go to state 39
    WEND            shift and go to state 41
    NEXT            shift and go to state 42
    LOOP            shift and go to state 43
    IF              shift and go to state 40
    ELSEIF          shift and go to state 46
    ELSE            shift and go to state 47
    CASE            shift and go to state 17
    DIM             shift and go to state 48
    WHILE           shift and go to state 24
    FOR             shift and go to state 26
    DO              shift and go to state 25
    SUB             shift and go to state 44
    FUNCTION        shift and go to state 45

    statement                      shift and go to state 1
    assignment                     shift and go to state 2
    declaration                    shift and go to state 3
    funcall                        shift and go to state 4
    control                        shift and go to state 5
    return                         shift and go to state 6
    defun_statement                shift and go to state 7
    expression                     shift and go to state 8
    block_begin                    shift and go to state 9
    block_end                      shift and go to state 10
    if_block_begin                 shift and go to state 11
    elseif_block_begin             shift and go to state 12
    else_statement                 shift and go to state 13
    case_begin                     shift and go to state 14
    case_else_begin                shift and go to state 15
    declare_array                  shift and go to state 22
    while_block_begin              shift and go to state 35
    for_block_begin                shift and go to state 36
    do_block_begin                 shift and go to state 37
    function_block_begin           shift and go to state 38

state 1

    (0) S' -> statement .
    (1) statement -> statement . COLON statement

    COLON           shift and go to state 49


state 2

    (2) statement -> assignment .

    COLON           reduce using rule 2 (statement -> assignment .)
    $end            reduce using rule 2 (statement -> assignment .)


state 3

    (3) statement -> declaration .

    COLON           reduce using rule 3 (statement -> declaration .)
    $end            reduce using rule 3 (statement -> declaration .)


state 4

    (4) statement -> funcall .

    COLON           reduce using rule 4 (statement -> funcall .)
    $end            reduce using rule 4 (statement -> funcall .)


state 5

    (5) statement -> control .

    COLON           reduce using rule 5 (statement -> control .)
    $end            reduce using rule 5 (statement -> control .)


state 6

    (6) statement -> return .

    COLON           reduce using rule 6 (statement -> return .)
    $end            reduce using rule 6 (statement -> return .)


state 7

    (7) statement -> defun_statement .

    COLON           reduce using rule 7 (statement -> defun_statement .)
    $end            reduce using rule 7 (statement -> defun_statement .)


state 8

    (8) statement -> expression .
    (25) assignment -> expression . DOT ID EQUALS expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 8 (statement -> expression .)
    $end            reduce using rule 8 (statement -> expression .)
    DOT             shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58


state 9

    (9) statement -> block_begin .

    COLON           reduce using rule 9 (statement -> block_begin .)
    $end            reduce using rule 9 (statement -> block_begin .)


state 10

    (10) statement -> block_end .

    COLON           reduce using rule 10 (statement -> block_end .)
    $end            reduce using rule 10 (statement -> block_end .)


state 11

    (11) statement -> if_block_begin .

    COLON           reduce using rule 11 (statement -> if_block_begin .)
    $end            reduce using rule 11 (statement -> if_block_begin .)


state 12

    (12) statement -> elseif_block_begin .

    COLON           reduce using rule 12 (statement -> elseif_block_begin .)
    $end            reduce using rule 12 (statement -> elseif_block_begin .)


state 13

    (13) statement -> else_statement .

    COLON           reduce using rule 13 (statement -> else_statement .)
    $end            reduce using rule 13 (statement -> else_statement .)


state 14

    (14) statement -> case_begin .

    COLON           reduce using rule 14 (statement -> case_begin .)
    $end            reduce using rule 14 (statement -> case_begin .)


state 15

    (15) statement -> case_else_begin .

    COLON           reduce using rule 15 (statement -> case_else_begin .)
    $end            reduce using rule 15 (statement -> case_else_begin .)


state 16

    (63) statement -> SELECT . CASE expression
    (64) statement -> SELECT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    CASE            shift and go to state 59
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 60

state 17

    (65) case_begin -> CASE . expression
    (66) case_else_begin -> CASE . ELSE
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    ELSE            shift and go to state 63
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 62

state 18

    (94) statement -> USE . ID

    ID              shift and go to state 64


state 19

    (22) assignment -> ID . EQUALS expression
    (24) assignment -> ID . LPAREN expression RPAREN EQUALS expression
    (21) funcall -> ID . args_list
    (49) expression -> ID . LPAREN RPAREN
    (50) expression -> ID . LPAREN args_list RPAREN
    (54) expression -> ID .
    (16) args_list -> . args_list COMMA expression
    (17) args_list -> . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

  ! shift/reduce conflict for MINUS resolved as shift
    EQUALS          shift and go to state 65
    LPAREN          shift and go to state 67
    DOT             reduce using rule 54 (expression -> ID .)
    PLUS            reduce using rule 54 (expression -> ID .)
    TIMES           reduce using rule 54 (expression -> ID .)
    DIVIDE          reduce using rule 54 (expression -> ID .)
    EXACTDIV        reduce using rule 54 (expression -> ID .)
    MOD             reduce using rule 54 (expression -> ID .)
    AS              reduce using rule 54 (expression -> ID .)
    EXP             reduce using rule 54 (expression -> ID .)
    COLON           reduce using rule 54 (expression -> ID .)
    $end            reduce using rule 54 (expression -> ID .)
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

  ! MINUS           [ reduce using rule 54 (expression -> ID .) ]

    expression                     shift and go to state 66
    args_list                      shift and go to state 68

state 20

    (23) assignment -> LET . ID EQUALS expression

    ID              shift and go to state 69


state 21

    (48) expression -> LPAREN . expression RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 70

state 22

    (26) declaration -> declare_array .

    COLON           reduce using rule 26 (declaration -> declare_array .)
    $end            reduce using rule 26 (declaration -> declare_array .)


state 23

    (88) control -> EXIT . WHILE
    (89) control -> EXIT . DO
    (90) control -> EXIT . FOR

    WHILE           shift and go to state 71
    DO              shift and go to state 72
    FOR             shift and go to state 73


state 24

    (67) while_block_begin -> WHILE . rel_expression
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 74
    expression                     shift and go to state 75

state 25

    (68) do_block_begin -> DO .

    COLON           reduce using rule 68 (do_block_begin -> DO .)
    $end            reduce using rule 68 (do_block_begin -> DO .)


state 26

    (69) for_block_begin -> FOR . ID EQUALS expression TO expression
    (70) for_block_begin -> FOR . ID EQUALS expression TO expression STEP expression

    ID              shift and go to state 78


state 27

    (91) control -> CONTINUE . WHILE
    (92) control -> CONTINUE . DO
    (93) control -> CONTINUE . FOR

    WHILE           shift and go to state 79
    DO              shift and go to state 80
    FOR             shift and go to state 81


state 28

    (86) return -> RETURN .
    (87) return -> RETURN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    COLON           reduce using rule 86 (return -> RETURN .)
    $end            reduce using rule 86 (return -> RETURN .)
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 82

state 29

    (20) defun_statement -> DEFUN . ID LPAREN params_list RPAREN EQUALS expression

    ID              shift and go to state 83


state 30

    (47) expression -> MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 84

state 31

    (51) expression -> INTEGER .

    DOT             reduce using rule 51 (expression -> INTEGER .)
    PLUS            reduce using rule 51 (expression -> INTEGER .)
    MINUS           reduce using rule 51 (expression -> INTEGER .)
    TIMES           reduce using rule 51 (expression -> INTEGER .)
    DIVIDE          reduce using rule 51 (expression -> INTEGER .)
    EXACTDIV        reduce using rule 51 (expression -> INTEGER .)
    MOD             reduce using rule 51 (expression -> INTEGER .)
    AS              reduce using rule 51 (expression -> INTEGER .)
    EXP             reduce using rule 51 (expression -> INTEGER .)
    COLON           reduce using rule 51 (expression -> INTEGER .)
    $end            reduce using rule 51 (expression -> INTEGER .)
    COMMA           reduce using rule 51 (expression -> INTEGER .)
    RPAREN          reduce using rule 51 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 51 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 51 (expression -> INTEGER .)
    EQUAL_GREATER_THAN reduce using rule 51 (expression -> INTEGER .)
    EQUAL_LESS_THAN reduce using rule 51 (expression -> INTEGER .)
    EQUALS          reduce using rule 51 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 51 (expression -> INTEGER .)
    RBRACE          reduce using rule 51 (expression -> INTEGER .)
    AND             reduce using rule 51 (expression -> INTEGER .)
    OR              reduce using rule 51 (expression -> INTEGER .)
    THEN            reduce using rule 51 (expression -> INTEGER .)
    TO              reduce using rule 51 (expression -> INTEGER .)
    STEP            reduce using rule 51 (expression -> INTEGER .)


state 32

    (52) expression -> DECIMAL .

    DOT             reduce using rule 52 (expression -> DECIMAL .)
    PLUS            reduce using rule 52 (expression -> DECIMAL .)
    MINUS           reduce using rule 52 (expression -> DECIMAL .)
    TIMES           reduce using rule 52 (expression -> DECIMAL .)
    DIVIDE          reduce using rule 52 (expression -> DECIMAL .)
    EXACTDIV        reduce using rule 52 (expression -> DECIMAL .)
    MOD             reduce using rule 52 (expression -> DECIMAL .)
    AS              reduce using rule 52 (expression -> DECIMAL .)
    EXP             reduce using rule 52 (expression -> DECIMAL .)
    COLON           reduce using rule 52 (expression -> DECIMAL .)
    $end            reduce using rule 52 (expression -> DECIMAL .)
    COMMA           reduce using rule 52 (expression -> DECIMAL .)
    RPAREN          reduce using rule 52 (expression -> DECIMAL .)
    GREATER_THAN    reduce using rule 52 (expression -> DECIMAL .)
    LESS_THAN       reduce using rule 52 (expression -> DECIMAL .)
    EQUAL_GREATER_THAN reduce using rule 52 (expression -> DECIMAL .)
    EQUAL_LESS_THAN reduce using rule 52 (expression -> DECIMAL .)
    EQUALS          reduce using rule 52 (expression -> DECIMAL .)
    NOT_EQUAL       reduce using rule 52 (expression -> DECIMAL .)
    RBRACE          reduce using rule 52 (expression -> DECIMAL .)
    AND             reduce using rule 52 (expression -> DECIMAL .)
    OR              reduce using rule 52 (expression -> DECIMAL .)
    THEN            reduce using rule 52 (expression -> DECIMAL .)
    TO              reduce using rule 52 (expression -> DECIMAL .)
    STEP            reduce using rule 52 (expression -> DECIMAL .)


state 33

    (53) expression -> STRING .

    DOT             reduce using rule 53 (expression -> STRING .)
    PLUS            reduce using rule 53 (expression -> STRING .)
    MINUS           reduce using rule 53 (expression -> STRING .)
    TIMES           reduce using rule 53 (expression -> STRING .)
    DIVIDE          reduce using rule 53 (expression -> STRING .)
    EXACTDIV        reduce using rule 53 (expression -> STRING .)
    MOD             reduce using rule 53 (expression -> STRING .)
    AS              reduce using rule 53 (expression -> STRING .)
    EXP             reduce using rule 53 (expression -> STRING .)
    COLON           reduce using rule 53 (expression -> STRING .)
    $end            reduce using rule 53 (expression -> STRING .)
    COMMA           reduce using rule 53 (expression -> STRING .)
    RPAREN          reduce using rule 53 (expression -> STRING .)
    GREATER_THAN    reduce using rule 53 (expression -> STRING .)
    LESS_THAN       reduce using rule 53 (expression -> STRING .)
    EQUAL_GREATER_THAN reduce using rule 53 (expression -> STRING .)
    EQUAL_LESS_THAN reduce using rule 53 (expression -> STRING .)
    EQUALS          reduce using rule 53 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 53 (expression -> STRING .)
    RBRACE          reduce using rule 53 (expression -> STRING .)
    AND             reduce using rule 53 (expression -> STRING .)
    OR              reduce using rule 53 (expression -> STRING .)
    THEN            reduce using rule 53 (expression -> STRING .)
    TO              reduce using rule 53 (expression -> STRING .)
    STEP            reduce using rule 53 (expression -> STRING .)


state 34

    (55) expression -> LBRACE . args_list RBRACE
    (16) args_list -> . args_list COMMA expression
    (17) args_list -> . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    args_list                      shift and go to state 85
    expression                     shift and go to state 66

state 35

    (56) block_begin -> while_block_begin .

    COLON           reduce using rule 56 (block_begin -> while_block_begin .)
    $end            reduce using rule 56 (block_begin -> while_block_begin .)


state 36

    (57) block_begin -> for_block_begin .

    COLON           reduce using rule 57 (block_begin -> for_block_begin .)
    $end            reduce using rule 57 (block_begin -> for_block_begin .)


state 37

    (58) block_begin -> do_block_begin .

    COLON           reduce using rule 58 (block_begin -> do_block_begin .)
    $end            reduce using rule 58 (block_begin -> do_block_begin .)


state 38

    (59) block_begin -> function_block_begin .

    COLON           reduce using rule 59 (block_begin -> function_block_begin .)
    $end            reduce using rule 59 (block_begin -> function_block_begin .)


state 39

    (75) block_end -> END . IF
    (76) block_end -> END . SELECT
    (77) block_end -> END . WHILE
    (79) block_end -> END . FOR
    (84) block_end -> END . SUB
    (85) block_end -> END . FUNCTION

    IF              shift and go to state 86
    SELECT          shift and go to state 87
    WHILE           shift and go to state 88
    FOR             shift and go to state 89
    SUB             shift and go to state 90
    FUNCTION        shift and go to state 91


state 40

    (60) if_block_begin -> IF . rel_expression THEN
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 92
    expression                     shift and go to state 75

state 41

    (78) block_end -> WEND .

    COLON           reduce using rule 78 (block_end -> WEND .)
    $end            reduce using rule 78 (block_end -> WEND .)


state 42

    (80) block_end -> NEXT . ID

    ID              shift and go to state 93


state 43

    (81) block_end -> LOOP .
    (82) block_end -> LOOP . WHILE rel_expression
    (83) block_end -> LOOP . UNTIL rel_expression

    COLON           reduce using rule 81 (block_end -> LOOP .)
    $end            reduce using rule 81 (block_end -> LOOP .)
    WHILE           shift and go to state 94
    UNTIL           shift and go to state 95


state 44

    (71) function_block_begin -> SUB . ID LPAREN params_list RPAREN
    (73) function_block_begin -> SUB . ID LPAREN RPAREN

    ID              shift and go to state 96


state 45

    (72) function_block_begin -> FUNCTION . ID LPAREN params_list RPAREN
    (74) function_block_begin -> FUNCTION . ID LPAREN RPAREN

    ID              shift and go to state 97


state 46

    (62) elseif_block_begin -> ELSEIF . rel_expression THEN
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 98
    expression                     shift and go to state 75

state 47

    (61) else_statement -> ELSE .

    COLON           reduce using rule 61 (else_statement -> ELSE .)
    $end            reduce using rule 61 (else_statement -> ELSE .)


state 48

    (27) declare_array -> DIM . ID LPAREN expression RPAREN AS ID

    ID              shift and go to state 99


state 49

    (1) statement -> statement COLON . statement
    (1) statement -> . statement COLON statement
    (2) statement -> . assignment
    (3) statement -> . declaration
    (4) statement -> . funcall
    (5) statement -> . control
    (6) statement -> . return
    (7) statement -> . defun_statement
    (8) statement -> . expression
    (9) statement -> . block_begin
    (10) statement -> . block_end
    (11) statement -> . if_block_begin
    (12) statement -> . elseif_block_begin
    (13) statement -> . else_statement
    (14) statement -> . case_begin
    (15) statement -> . case_else_begin
    (63) statement -> . SELECT CASE expression
    (64) statement -> . SELECT expression
    (94) statement -> . USE ID
    (22) assignment -> . ID EQUALS expression
    (23) assignment -> . LET ID EQUALS expression
    (24) assignment -> . ID LPAREN expression RPAREN EQUALS expression
    (25) assignment -> . expression DOT ID EQUALS expression
    (26) declaration -> . declare_array
    (21) funcall -> . ID args_list
    (88) control -> . EXIT WHILE
    (89) control -> . EXIT DO
    (90) control -> . EXIT FOR
    (91) control -> . CONTINUE WHILE
    (92) control -> . CONTINUE DO
    (93) control -> . CONTINUE FOR
    (86) return -> . RETURN
    (87) return -> . RETURN expression
    (20) defun_statement -> . DEFUN ID LPAREN params_list RPAREN EQUALS expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE
    (56) block_begin -> . while_block_begin
    (57) block_begin -> . for_block_begin
    (58) block_begin -> . do_block_begin
    (59) block_begin -> . function_block_begin
    (75) block_end -> . END IF
    (76) block_end -> . END SELECT
    (77) block_end -> . END WHILE
    (78) block_end -> . WEND
    (79) block_end -> . END FOR
    (80) block_end -> . NEXT ID
    (81) block_end -> . LOOP
    (82) block_end -> . LOOP WHILE rel_expression
    (83) block_end -> . LOOP UNTIL rel_expression
    (84) block_end -> . END SUB
    (85) block_end -> . END FUNCTION
    (60) if_block_begin -> . IF rel_expression THEN
    (62) elseif_block_begin -> . ELSEIF rel_expression THEN
    (61) else_statement -> . ELSE
    (65) case_begin -> . CASE expression
    (66) case_else_begin -> . CASE ELSE
    (27) declare_array -> . DIM ID LPAREN expression RPAREN AS ID
    (67) while_block_begin -> . WHILE rel_expression
    (69) for_block_begin -> . FOR ID EQUALS expression TO expression
    (70) for_block_begin -> . FOR ID EQUALS expression TO expression STEP expression
    (68) do_block_begin -> . DO
    (71) function_block_begin -> . SUB ID LPAREN params_list RPAREN
    (72) function_block_begin -> . FUNCTION ID LPAREN params_list RPAREN
    (73) function_block_begin -> . SUB ID LPAREN RPAREN
    (74) function_block_begin -> . FUNCTION ID LPAREN RPAREN

    SELECT          shift and go to state 16
    USE             shift and go to state 18
    ID              shift and go to state 19
    LET             shift and go to state 20
    EXIT            shift and go to state 23
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    DEFUN           shift and go to state 29
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34
    END             shift and go to state 39
    WEND            shift and go to state 41
    NEXT            shift and go to state 42
    LOOP            shift and go to state 43
    IF              shift and go to state 40
    ELSEIF          shift and go to state 46
    ELSE            shift and go to state 47
    CASE            shift and go to state 17
    DIM             shift and go to state 48
    WHILE           shift and go to state 24
    FOR             shift and go to state 26
    DO              shift and go to state 25
    SUB             shift and go to state 44
    FUNCTION        shift and go to state 45

    statement                      shift and go to state 100
    assignment                     shift and go to state 2
    declaration                    shift and go to state 3
    funcall                        shift and go to state 4
    control                        shift and go to state 5
    return                         shift and go to state 6
    defun_statement                shift and go to state 7
    expression                     shift and go to state 8
    block_begin                    shift and go to state 9
    block_end                      shift and go to state 10
    if_block_begin                 shift and go to state 11
    elseif_block_begin             shift and go to state 12
    else_statement                 shift and go to state 13
    case_begin                     shift and go to state 14
    case_else_begin                shift and go to state 15
    declare_array                  shift and go to state 22
    while_block_begin              shift and go to state 35
    for_block_begin                shift and go to state 36
    do_block_begin                 shift and go to state 37
    function_block_begin           shift and go to state 38

state 50

    (25) assignment -> expression DOT . ID EQUALS expression
    (46) expression -> expression DOT . ID

    ID              shift and go to state 101


state 51

    (38) expression -> expression PLUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 102

state 52

    (39) expression -> expression MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 103

state 53

    (40) expression -> expression TIMES . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 104

state 54

    (41) expression -> expression DIVIDE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 105

state 55

    (42) expression -> expression EXACTDIV . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 106

state 56

    (43) expression -> expression MOD . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 107

state 57

    (44) expression -> expression AS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 108

state 58

    (45) expression -> expression EXP . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 109

state 59

    (63) statement -> SELECT CASE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 110

state 60

    (64) statement -> SELECT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 64 (statement -> SELECT expression .)
    $end            reduce using rule 64 (statement -> SELECT expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 61

    (49) expression -> ID . LPAREN RPAREN
    (50) expression -> ID . LPAREN args_list RPAREN
    (54) expression -> ID .

    LPAREN          shift and go to state 112
    PLUS            reduce using rule 54 (expression -> ID .)
    MINUS           reduce using rule 54 (expression -> ID .)
    TIMES           reduce using rule 54 (expression -> ID .)
    DIVIDE          reduce using rule 54 (expression -> ID .)
    EXACTDIV        reduce using rule 54 (expression -> ID .)
    MOD             reduce using rule 54 (expression -> ID .)
    AS              reduce using rule 54 (expression -> ID .)
    EXP             reduce using rule 54 (expression -> ID .)
    DOT             reduce using rule 54 (expression -> ID .)
    COLON           reduce using rule 54 (expression -> ID .)
    $end            reduce using rule 54 (expression -> ID .)
    COMMA           reduce using rule 54 (expression -> ID .)
    RPAREN          reduce using rule 54 (expression -> ID .)
    GREATER_THAN    reduce using rule 54 (expression -> ID .)
    LESS_THAN       reduce using rule 54 (expression -> ID .)
    EQUAL_GREATER_THAN reduce using rule 54 (expression -> ID .)
    EQUAL_LESS_THAN reduce using rule 54 (expression -> ID .)
    EQUALS          reduce using rule 54 (expression -> ID .)
    NOT_EQUAL       reduce using rule 54 (expression -> ID .)
    RBRACE          reduce using rule 54 (expression -> ID .)
    AND             reduce using rule 54 (expression -> ID .)
    OR              reduce using rule 54 (expression -> ID .)
    THEN            reduce using rule 54 (expression -> ID .)
    TO              reduce using rule 54 (expression -> ID .)
    STEP            reduce using rule 54 (expression -> ID .)


state 62

    (65) case_begin -> CASE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 65 (case_begin -> CASE expression .)
    $end            reduce using rule 65 (case_begin -> CASE expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 63

    (66) case_else_begin -> CASE ELSE .

    COLON           reduce using rule 66 (case_else_begin -> CASE ELSE .)
    $end            reduce using rule 66 (case_else_begin -> CASE ELSE .)


state 64

    (94) statement -> USE ID .

    COLON           reduce using rule 94 (statement -> USE ID .)
    $end            reduce using rule 94 (statement -> USE ID .)


state 65

    (22) assignment -> ID EQUALS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 113

state 66

    (17) args_list -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COMMA           reduce using rule 17 (args_list -> expression .)
    COLON           reduce using rule 17 (args_list -> expression .)
    $end            reduce using rule 17 (args_list -> expression .)
    RBRACE          reduce using rule 17 (args_list -> expression .)
    RPAREN          reduce using rule 17 (args_list -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 67

    (24) assignment -> ID LPAREN . expression RPAREN EQUALS expression
    (49) expression -> ID LPAREN . RPAREN
    (50) expression -> ID LPAREN . args_list RPAREN
    (48) expression -> LPAREN . expression RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE
    (16) args_list -> . args_list COMMA expression
    (17) args_list -> . expression

    RPAREN          shift and go to state 115
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 114
    args_list                      shift and go to state 116

state 68

    (21) funcall -> ID args_list .
    (16) args_list -> args_list . COMMA expression

    COLON           reduce using rule 21 (funcall -> ID args_list .)
    $end            reduce using rule 21 (funcall -> ID args_list .)
    COMMA           shift and go to state 117


state 69

    (23) assignment -> LET ID . EQUALS expression

    EQUALS          shift and go to state 118


state 70

    (48) expression -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    RPAREN          shift and go to state 119
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 71

    (88) control -> EXIT WHILE .

    COLON           reduce using rule 88 (control -> EXIT WHILE .)
    $end            reduce using rule 88 (control -> EXIT WHILE .)


state 72

    (89) control -> EXIT DO .

    COLON           reduce using rule 89 (control -> EXIT DO .)
    $end            reduce using rule 89 (control -> EXIT DO .)


state 73

    (90) control -> EXIT FOR .

    COLON           reduce using rule 90 (control -> EXIT FOR .)
    $end            reduce using rule 90 (control -> EXIT FOR .)


state 74

    (67) while_block_begin -> WHILE rel_expression .
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 67 (while_block_begin -> WHILE rel_expression .)
    $end            reduce using rule 67 (while_block_begin -> WHILE rel_expression .)
    AND             shift and go to state 120
    OR              shift and go to state 121


state 75

    (28) rel_expression -> expression . GREATER_THAN expression
    (29) rel_expression -> expression . LESS_THAN expression
    (30) rel_expression -> expression . EQUAL_GREATER_THAN expression
    (31) rel_expression -> expression . EQUAL_LESS_THAN expression
    (32) rel_expression -> expression . EQUALS expression
    (33) rel_expression -> expression . NOT_EQUAL expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    GREATER_THAN    shift and go to state 122
    LESS_THAN       shift and go to state 123
    EQUAL_GREATER_THAN shift and go to state 124
    EQUAL_LESS_THAN shift and go to state 125
    EQUALS          shift and go to state 126
    NOT_EQUAL       shift and go to state 127
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 76

    (36) rel_expression -> LPAREN . rel_expression RPAREN
    (48) expression -> LPAREN . expression RPAREN
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 128
    expression                     shift and go to state 129

state 77

    (37) rel_expression -> NOT . rel_expression
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 130
    expression                     shift and go to state 75

state 78

    (69) for_block_begin -> FOR ID . EQUALS expression TO expression
    (70) for_block_begin -> FOR ID . EQUALS expression TO expression STEP expression

    EQUALS          shift and go to state 131


state 79

    (91) control -> CONTINUE WHILE .

    COLON           reduce using rule 91 (control -> CONTINUE WHILE .)
    $end            reduce using rule 91 (control -> CONTINUE WHILE .)


state 80

    (92) control -> CONTINUE DO .

    COLON           reduce using rule 92 (control -> CONTINUE DO .)
    $end            reduce using rule 92 (control -> CONTINUE DO .)


state 81

    (93) control -> CONTINUE FOR .

    COLON           reduce using rule 93 (control -> CONTINUE FOR .)
    $end            reduce using rule 93 (control -> CONTINUE FOR .)


state 82

    (87) return -> RETURN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 87 (return -> RETURN expression .)
    $end            reduce using rule 87 (return -> RETURN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 83

    (20) defun_statement -> DEFUN ID . LPAREN params_list RPAREN EQUALS expression

    LPAREN          shift and go to state 132


state 84

    (47) expression -> MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    PLUS            reduce using rule 47 (expression -> MINUS expression .)
    MINUS           reduce using rule 47 (expression -> MINUS expression .)
    TIMES           reduce using rule 47 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 47 (expression -> MINUS expression .)
    EXACTDIV        reduce using rule 47 (expression -> MINUS expression .)
    MOD             reduce using rule 47 (expression -> MINUS expression .)
    AS              reduce using rule 47 (expression -> MINUS expression .)
    EXP             reduce using rule 47 (expression -> MINUS expression .)
    COLON           reduce using rule 47 (expression -> MINUS expression .)
    $end            reduce using rule 47 (expression -> MINUS expression .)
    COMMA           reduce using rule 47 (expression -> MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 47 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 47 (expression -> MINUS expression .)
    EQUAL_GREATER_THAN reduce using rule 47 (expression -> MINUS expression .)
    EQUAL_LESS_THAN reduce using rule 47 (expression -> MINUS expression .)
    EQUALS          reduce using rule 47 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 47 (expression -> MINUS expression .)
    RBRACE          reduce using rule 47 (expression -> MINUS expression .)
    AND             reduce using rule 47 (expression -> MINUS expression .)
    OR              reduce using rule 47 (expression -> MINUS expression .)
    THEN            reduce using rule 47 (expression -> MINUS expression .)
    TO              reduce using rule 47 (expression -> MINUS expression .)
    STEP            reduce using rule 47 (expression -> MINUS expression .)
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 47 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! AS              [ shift and go to state 57 ]
  ! EXP             [ shift and go to state 58 ]


state 85

    (55) expression -> LBRACE args_list . RBRACE
    (16) args_list -> args_list . COMMA expression

    RBRACE          shift and go to state 133
    COMMA           shift and go to state 117


state 86

    (75) block_end -> END IF .

    COLON           reduce using rule 75 (block_end -> END IF .)
    $end            reduce using rule 75 (block_end -> END IF .)


state 87

    (76) block_end -> END SELECT .

    COLON           reduce using rule 76 (block_end -> END SELECT .)
    $end            reduce using rule 76 (block_end -> END SELECT .)


state 88

    (77) block_end -> END WHILE .

    COLON           reduce using rule 77 (block_end -> END WHILE .)
    $end            reduce using rule 77 (block_end -> END WHILE .)


state 89

    (79) block_end -> END FOR .

    COLON           reduce using rule 79 (block_end -> END FOR .)
    $end            reduce using rule 79 (block_end -> END FOR .)


state 90

    (84) block_end -> END SUB .

    COLON           reduce using rule 84 (block_end -> END SUB .)
    $end            reduce using rule 84 (block_end -> END SUB .)


state 91

    (85) block_end -> END FUNCTION .

    COLON           reduce using rule 85 (block_end -> END FUNCTION .)
    $end            reduce using rule 85 (block_end -> END FUNCTION .)


state 92

    (60) if_block_begin -> IF rel_expression . THEN
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    THEN            shift and go to state 134
    AND             shift and go to state 120
    OR              shift and go to state 121


state 93

    (80) block_end -> NEXT ID .

    COLON           reduce using rule 80 (block_end -> NEXT ID .)
    $end            reduce using rule 80 (block_end -> NEXT ID .)


state 94

    (82) block_end -> LOOP WHILE . rel_expression
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 135
    expression                     shift and go to state 75

state 95

    (83) block_end -> LOOP UNTIL . rel_expression
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 136
    expression                     shift and go to state 75

state 96

    (71) function_block_begin -> SUB ID . LPAREN params_list RPAREN
    (73) function_block_begin -> SUB ID . LPAREN RPAREN

    LPAREN          shift and go to state 137


state 97

    (72) function_block_begin -> FUNCTION ID . LPAREN params_list RPAREN
    (74) function_block_begin -> FUNCTION ID . LPAREN RPAREN

    LPAREN          shift and go to state 138


state 98

    (62) elseif_block_begin -> ELSEIF rel_expression . THEN
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    THEN            shift and go to state 139
    AND             shift and go to state 120
    OR              shift and go to state 121


state 99

    (27) declare_array -> DIM ID . LPAREN expression RPAREN AS ID

    LPAREN          shift and go to state 140


state 100

    (1) statement -> statement COLON statement .
    (1) statement -> statement . COLON statement

    COLON           reduce using rule 1 (statement -> statement COLON statement .)
    $end            reduce using rule 1 (statement -> statement COLON statement .)

  ! COLON           [ shift and go to state 49 ]


state 101

    (25) assignment -> expression DOT ID . EQUALS expression
    (46) expression -> expression DOT ID .

    EQUALS          shift and go to state 141
    DOT             reduce using rule 46 (expression -> expression DOT ID .)
    PLUS            reduce using rule 46 (expression -> expression DOT ID .)
    MINUS           reduce using rule 46 (expression -> expression DOT ID .)
    TIMES           reduce using rule 46 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 46 (expression -> expression DOT ID .)
    EXACTDIV        reduce using rule 46 (expression -> expression DOT ID .)
    MOD             reduce using rule 46 (expression -> expression DOT ID .)
    AS              reduce using rule 46 (expression -> expression DOT ID .)
    EXP             reduce using rule 46 (expression -> expression DOT ID .)
    COLON           reduce using rule 46 (expression -> expression DOT ID .)
    $end            reduce using rule 46 (expression -> expression DOT ID .)


state 102

    (38) expression -> expression PLUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    PLUS            reduce using rule 38 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 38 (expression -> expression PLUS expression .)
    EXACTDIV        reduce using rule 38 (expression -> expression PLUS expression .)
    AS              reduce using rule 38 (expression -> expression PLUS expression .)
    COLON           reduce using rule 38 (expression -> expression PLUS expression .)
    $end            reduce using rule 38 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 38 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 38 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 38 (expression -> expression PLUS expression .)
    EQUAL_GREATER_THAN reduce using rule 38 (expression -> expression PLUS expression .)
    EQUAL_LESS_THAN reduce using rule 38 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 38 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 38 (expression -> expression PLUS expression .)
    AND             reduce using rule 38 (expression -> expression PLUS expression .)
    OR              reduce using rule 38 (expression -> expression PLUS expression .)
    THEN            reduce using rule 38 (expression -> expression PLUS expression .)
    TO              reduce using rule 38 (expression -> expression PLUS expression .)
    STEP            reduce using rule 38 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 56
    EXP             shift and go to state 58
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! EXP             [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! AS              [ shift and go to state 57 ]


state 103

    (39) expression -> expression MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    PLUS            reduce using rule 39 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 39 (expression -> expression MINUS expression .)
    EXACTDIV        reduce using rule 39 (expression -> expression MINUS expression .)
    AS              reduce using rule 39 (expression -> expression MINUS expression .)
    COLON           reduce using rule 39 (expression -> expression MINUS expression .)
    $end            reduce using rule 39 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 39 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 39 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 39 (expression -> expression MINUS expression .)
    EQUAL_GREATER_THAN reduce using rule 39 (expression -> expression MINUS expression .)
    EQUAL_LESS_THAN reduce using rule 39 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 39 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 39 (expression -> expression MINUS expression .)
    AND             reduce using rule 39 (expression -> expression MINUS expression .)
    OR              reduce using rule 39 (expression -> expression MINUS expression .)
    THEN            reduce using rule 39 (expression -> expression MINUS expression .)
    TO              reduce using rule 39 (expression -> expression MINUS expression .)
    STEP            reduce using rule 39 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 56
    EXP             shift and go to state 58
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! AS              [ shift and go to state 57 ]


state 104

    (40) expression -> expression TIMES expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    PLUS            reduce using rule 40 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 40 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 40 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 40 (expression -> expression TIMES expression .)
    EXACTDIV        reduce using rule 40 (expression -> expression TIMES expression .)
    MOD             reduce using rule 40 (expression -> expression TIMES expression .)
    AS              reduce using rule 40 (expression -> expression TIMES expression .)
    COLON           reduce using rule 40 (expression -> expression TIMES expression .)
    $end            reduce using rule 40 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 40 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 40 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 40 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 40 (expression -> expression TIMES expression .)
    EQUAL_GREATER_THAN reduce using rule 40 (expression -> expression TIMES expression .)
    EQUAL_LESS_THAN reduce using rule 40 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 40 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 40 (expression -> expression TIMES expression .)
    AND             reduce using rule 40 (expression -> expression TIMES expression .)
    OR              reduce using rule 40 (expression -> expression TIMES expression .)
    THEN            reduce using rule 40 (expression -> expression TIMES expression .)
    TO              reduce using rule 40 (expression -> expression TIMES expression .)
    STEP            reduce using rule 40 (expression -> expression TIMES expression .)
    EXP             shift and go to state 58
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! EXP             [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! AS              [ shift and go to state 57 ]


state 105

    (41) expression -> expression DIVIDE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    PLUS            reduce using rule 41 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 41 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 41 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    EXACTDIV        reduce using rule 41 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 41 (expression -> expression DIVIDE expression .)
    AS              reduce using rule 41 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 41 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 41 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 41 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 41 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 41 (expression -> expression DIVIDE expression .)
    EQUAL_GREATER_THAN reduce using rule 41 (expression -> expression DIVIDE expression .)
    EQUAL_LESS_THAN reduce using rule 41 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 41 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 41 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 41 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 41 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 41 (expression -> expression DIVIDE expression .)
    STEP            reduce using rule 41 (expression -> expression DIVIDE expression .)
    EXP             shift and go to state 58
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! EXP             [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! AS              [ shift and go to state 57 ]


state 106

    (42) expression -> expression EXACTDIV expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXACTDIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COLON           reduce using rule 42 (expression -> expression EXACTDIV expression .)
    $end            reduce using rule 42 (expression -> expression EXACTDIV expression .)
    COMMA           reduce using rule 42 (expression -> expression EXACTDIV expression .)
    RPAREN          reduce using rule 42 (expression -> expression EXACTDIV expression .)
    GREATER_THAN    reduce using rule 42 (expression -> expression EXACTDIV expression .)
    LESS_THAN       reduce using rule 42 (expression -> expression EXACTDIV expression .)
    EQUAL_GREATER_THAN reduce using rule 42 (expression -> expression EXACTDIV expression .)
    EQUAL_LESS_THAN reduce using rule 42 (expression -> expression EXACTDIV expression .)
    EQUALS          reduce using rule 42 (expression -> expression EXACTDIV expression .)
    NOT_EQUAL       reduce using rule 42 (expression -> expression EXACTDIV expression .)
    RBRACE          reduce using rule 42 (expression -> expression EXACTDIV expression .)
    AND             reduce using rule 42 (expression -> expression EXACTDIV expression .)
    OR              reduce using rule 42 (expression -> expression EXACTDIV expression .)
    THEN            reduce using rule 42 (expression -> expression EXACTDIV expression .)
    TO              reduce using rule 42 (expression -> expression EXACTDIV expression .)
    STEP            reduce using rule 42 (expression -> expression EXACTDIV expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! EXACTDIV        [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! AS              [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]
  ! EXP             [ reduce using rule 42 (expression -> expression EXACTDIV expression .) ]


state 107

    (43) expression -> expression MOD expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    PLUS            reduce using rule 43 (expression -> expression MOD expression .)
    MINUS           reduce using rule 43 (expression -> expression MOD expression .)
    TIMES           reduce using rule 43 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 43 (expression -> expression MOD expression .)
    EXACTDIV        reduce using rule 43 (expression -> expression MOD expression .)
    MOD             reduce using rule 43 (expression -> expression MOD expression .)
    AS              reduce using rule 43 (expression -> expression MOD expression .)
    COLON           reduce using rule 43 (expression -> expression MOD expression .)
    $end            reduce using rule 43 (expression -> expression MOD expression .)
    COMMA           reduce using rule 43 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 43 (expression -> expression MOD expression .)
    GREATER_THAN    reduce using rule 43 (expression -> expression MOD expression .)
    LESS_THAN       reduce using rule 43 (expression -> expression MOD expression .)
    EQUAL_GREATER_THAN reduce using rule 43 (expression -> expression MOD expression .)
    EQUAL_LESS_THAN reduce using rule 43 (expression -> expression MOD expression .)
    EQUALS          reduce using rule 43 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 43 (expression -> expression MOD expression .)
    AND             reduce using rule 43 (expression -> expression MOD expression .)
    OR              reduce using rule 43 (expression -> expression MOD expression .)
    THEN            reduce using rule 43 (expression -> expression MOD expression .)
    TO              reduce using rule 43 (expression -> expression MOD expression .)
    STEP            reduce using rule 43 (expression -> expression MOD expression .)
    EXP             shift and go to state 58
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! EXP             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! AS              [ shift and go to state 57 ]


state 108

    (44) expression -> expression AS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    EXACTDIV        reduce using rule 44 (expression -> expression AS expression .)
    AS              reduce using rule 44 (expression -> expression AS expression .)
    COLON           reduce using rule 44 (expression -> expression AS expression .)
    $end            reduce using rule 44 (expression -> expression AS expression .)
    COMMA           reduce using rule 44 (expression -> expression AS expression .)
    RPAREN          reduce using rule 44 (expression -> expression AS expression .)
    GREATER_THAN    reduce using rule 44 (expression -> expression AS expression .)
    LESS_THAN       reduce using rule 44 (expression -> expression AS expression .)
    EQUAL_GREATER_THAN reduce using rule 44 (expression -> expression AS expression .)
    EQUAL_LESS_THAN reduce using rule 44 (expression -> expression AS expression .)
    EQUALS          reduce using rule 44 (expression -> expression AS expression .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression AS expression .)
    RBRACE          reduce using rule 44 (expression -> expression AS expression .)
    AND             reduce using rule 44 (expression -> expression AS expression .)
    OR              reduce using rule 44 (expression -> expression AS expression .)
    THEN            reduce using rule 44 (expression -> expression AS expression .)
    TO              reduce using rule 44 (expression -> expression AS expression .)
    STEP            reduce using rule 44 (expression -> expression AS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 56
    EXP             shift and go to state 58
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 44 (expression -> expression AS expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression AS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression AS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression AS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression AS expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> expression AS expression .) ]
  ! EXP             [ reduce using rule 44 (expression -> expression AS expression .) ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! AS              [ shift and go to state 57 ]


state 109

    (45) expression -> expression EXP expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    PLUS            reduce using rule 45 (expression -> expression EXP expression .)
    MINUS           reduce using rule 45 (expression -> expression EXP expression .)
    TIMES           reduce using rule 45 (expression -> expression EXP expression .)
    DIVIDE          reduce using rule 45 (expression -> expression EXP expression .)
    EXACTDIV        reduce using rule 45 (expression -> expression EXP expression .)
    MOD             reduce using rule 45 (expression -> expression EXP expression .)
    AS              reduce using rule 45 (expression -> expression EXP expression .)
    EXP             reduce using rule 45 (expression -> expression EXP expression .)
    COLON           reduce using rule 45 (expression -> expression EXP expression .)
    $end            reduce using rule 45 (expression -> expression EXP expression .)
    COMMA           reduce using rule 45 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 45 (expression -> expression EXP expression .)
    GREATER_THAN    reduce using rule 45 (expression -> expression EXP expression .)
    LESS_THAN       reduce using rule 45 (expression -> expression EXP expression .)
    EQUAL_GREATER_THAN reduce using rule 45 (expression -> expression EXP expression .)
    EQUAL_LESS_THAN reduce using rule 45 (expression -> expression EXP expression .)
    EQUALS          reduce using rule 45 (expression -> expression EXP expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> expression EXP expression .)
    RBRACE          reduce using rule 45 (expression -> expression EXP expression .)
    AND             reduce using rule 45 (expression -> expression EXP expression .)
    OR              reduce using rule 45 (expression -> expression EXP expression .)
    THEN            reduce using rule 45 (expression -> expression EXP expression .)
    TO              reduce using rule 45 (expression -> expression EXP expression .)
    STEP            reduce using rule 45 (expression -> expression EXP expression .)
    DOT             shift and go to state 111

  ! DOT             [ reduce using rule 45 (expression -> expression EXP expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]
  ! EXACTDIV        [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! AS              [ shift and go to state 57 ]
  ! EXP             [ shift and go to state 58 ]


state 110

    (63) statement -> SELECT CASE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 63 (statement -> SELECT CASE expression .)
    $end            reduce using rule 63 (statement -> SELECT CASE expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 111

    (46) expression -> expression DOT . ID

    ID              shift and go to state 142


state 112

    (49) expression -> ID LPAREN . RPAREN
    (50) expression -> ID LPAREN . args_list RPAREN
    (16) args_list -> . args_list COMMA expression
    (17) args_list -> . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    RPAREN          shift and go to state 115
    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    args_list                      shift and go to state 116
    expression                     shift and go to state 66

state 113

    (22) assignment -> ID EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 22 (assignment -> ID EQUALS expression .)
    $end            reduce using rule 22 (assignment -> ID EQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 114

    (24) assignment -> ID LPAREN expression . RPAREN EQUALS expression
    (48) expression -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID
    (17) args_list -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 143
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111
    COMMA           reduce using rule 17 (args_list -> expression .)

  ! RPAREN          [ reduce using rule 17 (args_list -> expression .) ]


state 115

    (49) expression -> ID LPAREN RPAREN .

    DOT             reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    EXACTDIV        reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    MOD             reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    AS              reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    EXP             reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    COLON           reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    $end            reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    EQUAL_LESS_THAN reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    AND             reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    OR              reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    THEN            reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    TO              reduce using rule 49 (expression -> ID LPAREN RPAREN .)
    STEP            reduce using rule 49 (expression -> ID LPAREN RPAREN .)


state 116

    (50) expression -> ID LPAREN args_list . RPAREN
    (16) args_list -> args_list . COMMA expression

    RPAREN          shift and go to state 144
    COMMA           shift and go to state 117


state 117

    (16) args_list -> args_list COMMA . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 145

state 118

    (23) assignment -> LET ID EQUALS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 146

state 119

    (48) expression -> LPAREN expression RPAREN .

    DOT             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EXACTDIV        reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    AS              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQUAL_LESS_THAN reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    STEP            reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 120

    (34) rel_expression -> rel_expression AND . rel_expression
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 147
    expression                     shift and go to state 75

state 121

    (35) rel_expression -> rel_expression OR . rel_expression
    (28) rel_expression -> . expression GREATER_THAN expression
    (29) rel_expression -> . expression LESS_THAN expression
    (30) rel_expression -> . expression EQUAL_GREATER_THAN expression
    (31) rel_expression -> . expression EQUAL_LESS_THAN expression
    (32) rel_expression -> . expression EQUALS expression
    (33) rel_expression -> . expression NOT_EQUAL expression
    (34) rel_expression -> . rel_expression AND rel_expression
    (35) rel_expression -> . rel_expression OR rel_expression
    (36) rel_expression -> . LPAREN rel_expression RPAREN
    (37) rel_expression -> . NOT rel_expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    LPAREN          shift and go to state 76
    NOT             shift and go to state 77
    MINUS           shift and go to state 30
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    rel_expression                 shift and go to state 148
    expression                     shift and go to state 75

state 122

    (28) rel_expression -> expression GREATER_THAN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 149

state 123

    (29) rel_expression -> expression LESS_THAN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 150

state 124

    (30) rel_expression -> expression EQUAL_GREATER_THAN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 151

state 125

    (31) rel_expression -> expression EQUAL_LESS_THAN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 152

state 126

    (32) rel_expression -> expression EQUALS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 153

state 127

    (33) rel_expression -> expression NOT_EQUAL . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 154

state 128

    (36) rel_expression -> LPAREN rel_expression . RPAREN
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    RPAREN          shift and go to state 155
    AND             shift and go to state 120
    OR              shift and go to state 121


state 129

    (48) expression -> LPAREN expression . RPAREN
    (28) rel_expression -> expression . GREATER_THAN expression
    (29) rel_expression -> expression . LESS_THAN expression
    (30) rel_expression -> expression . EQUAL_GREATER_THAN expression
    (31) rel_expression -> expression . EQUAL_LESS_THAN expression
    (32) rel_expression -> expression . EQUALS expression
    (33) rel_expression -> expression . NOT_EQUAL expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    RPAREN          shift and go to state 119
    GREATER_THAN    shift and go to state 122
    LESS_THAN       shift and go to state 123
    EQUAL_GREATER_THAN shift and go to state 124
    EQUAL_LESS_THAN shift and go to state 125
    EQUALS          shift and go to state 126
    NOT_EQUAL       shift and go to state 127
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 130

    (37) rel_expression -> NOT rel_expression .
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 37 (rel_expression -> NOT rel_expression .)
    OR              reduce using rule 37 (rel_expression -> NOT rel_expression .)
    COLON           reduce using rule 37 (rel_expression -> NOT rel_expression .)
    $end            reduce using rule 37 (rel_expression -> NOT rel_expression .)
    THEN            reduce using rule 37 (rel_expression -> NOT rel_expression .)
    RPAREN          reduce using rule 37 (rel_expression -> NOT rel_expression .)

  ! AND             [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]


state 131

    (69) for_block_begin -> FOR ID EQUALS . expression TO expression
    (70) for_block_begin -> FOR ID EQUALS . expression TO expression STEP expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 156

state 132

    (20) defun_statement -> DEFUN ID LPAREN . params_list RPAREN EQUALS expression
    (18) params_list -> . params_list COMMA ID
    (19) params_list -> . ID

    ID              shift and go to state 157

    params_list                    shift and go to state 158

state 133

    (55) expression -> LBRACE args_list RBRACE .

    DOT             reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    PLUS            reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    MINUS           reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    TIMES           reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    DIVIDE          reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    EXACTDIV        reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    MOD             reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    AS              reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    EXP             reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    COLON           reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    $end            reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    COMMA           reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    RPAREN          reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    GREATER_THAN    reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    LESS_THAN       reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    EQUAL_GREATER_THAN reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    EQUAL_LESS_THAN reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    EQUALS          reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    NOT_EQUAL       reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    RBRACE          reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    AND             reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    OR              reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    THEN            reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    TO              reduce using rule 55 (expression -> LBRACE args_list RBRACE .)
    STEP            reduce using rule 55 (expression -> LBRACE args_list RBRACE .)


state 134

    (60) if_block_begin -> IF rel_expression THEN .

    COLON           reduce using rule 60 (if_block_begin -> IF rel_expression THEN .)
    $end            reduce using rule 60 (if_block_begin -> IF rel_expression THEN .)


state 135

    (82) block_end -> LOOP WHILE rel_expression .
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 82 (block_end -> LOOP WHILE rel_expression .)
    $end            reduce using rule 82 (block_end -> LOOP WHILE rel_expression .)
    AND             shift and go to state 120
    OR              shift and go to state 121


state 136

    (83) block_end -> LOOP UNTIL rel_expression .
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    COLON           reduce using rule 83 (block_end -> LOOP UNTIL rel_expression .)
    $end            reduce using rule 83 (block_end -> LOOP UNTIL rel_expression .)
    AND             shift and go to state 120
    OR              shift and go to state 121


state 137

    (71) function_block_begin -> SUB ID LPAREN . params_list RPAREN
    (73) function_block_begin -> SUB ID LPAREN . RPAREN
    (18) params_list -> . params_list COMMA ID
    (19) params_list -> . ID

    RPAREN          shift and go to state 160
    ID              shift and go to state 157

    params_list                    shift and go to state 159

state 138

    (72) function_block_begin -> FUNCTION ID LPAREN . params_list RPAREN
    (74) function_block_begin -> FUNCTION ID LPAREN . RPAREN
    (18) params_list -> . params_list COMMA ID
    (19) params_list -> . ID

    RPAREN          shift and go to state 162
    ID              shift and go to state 157

    params_list                    shift and go to state 161

state 139

    (62) elseif_block_begin -> ELSEIF rel_expression THEN .

    COLON           reduce using rule 62 (elseif_block_begin -> ELSEIF rel_expression THEN .)
    $end            reduce using rule 62 (elseif_block_begin -> ELSEIF rel_expression THEN .)


state 140

    (27) declare_array -> DIM ID LPAREN . expression RPAREN AS ID
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 163

state 141

    (25) assignment -> expression DOT ID EQUALS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 164

state 142

    (46) expression -> expression DOT ID .

    PLUS            reduce using rule 46 (expression -> expression DOT ID .)
    MINUS           reduce using rule 46 (expression -> expression DOT ID .)
    TIMES           reduce using rule 46 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 46 (expression -> expression DOT ID .)
    EXACTDIV        reduce using rule 46 (expression -> expression DOT ID .)
    MOD             reduce using rule 46 (expression -> expression DOT ID .)
    AS              reduce using rule 46 (expression -> expression DOT ID .)
    EXP             reduce using rule 46 (expression -> expression DOT ID .)
    DOT             reduce using rule 46 (expression -> expression DOT ID .)
    COLON           reduce using rule 46 (expression -> expression DOT ID .)
    $end            reduce using rule 46 (expression -> expression DOT ID .)
    COMMA           reduce using rule 46 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 46 (expression -> expression DOT ID .)
    GREATER_THAN    reduce using rule 46 (expression -> expression DOT ID .)
    LESS_THAN       reduce using rule 46 (expression -> expression DOT ID .)
    EQUAL_GREATER_THAN reduce using rule 46 (expression -> expression DOT ID .)
    EQUAL_LESS_THAN reduce using rule 46 (expression -> expression DOT ID .)
    EQUALS          reduce using rule 46 (expression -> expression DOT ID .)
    NOT_EQUAL       reduce using rule 46 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 46 (expression -> expression DOT ID .)
    AND             reduce using rule 46 (expression -> expression DOT ID .)
    OR              reduce using rule 46 (expression -> expression DOT ID .)
    THEN            reduce using rule 46 (expression -> expression DOT ID .)
    TO              reduce using rule 46 (expression -> expression DOT ID .)
    STEP            reduce using rule 46 (expression -> expression DOT ID .)


state 143

    (24) assignment -> ID LPAREN expression RPAREN . EQUALS expression
    (48) expression -> LPAREN expression RPAREN .

    EQUALS          shift and go to state 165
    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EXACTDIV        reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    AS              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 144

    (50) expression -> ID LPAREN args_list RPAREN .

    DOT             reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    PLUS            reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    MINUS           reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    TIMES           reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    EXACTDIV        reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    MOD             reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    AS              reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    EXP             reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    COLON           reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    $end            reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    COMMA           reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    RPAREN          reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    GREATER_THAN    reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    LESS_THAN       reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    EQUAL_GREATER_THAN reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    EQUAL_LESS_THAN reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    EQUALS          reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    NOT_EQUAL       reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    RBRACE          reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    AND             reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    OR              reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    THEN            reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    TO              reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)
    STEP            reduce using rule 50 (expression -> ID LPAREN args_list RPAREN .)


state 145

    (16) args_list -> args_list COMMA expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COMMA           reduce using rule 16 (args_list -> args_list COMMA expression .)
    COLON           reduce using rule 16 (args_list -> args_list COMMA expression .)
    $end            reduce using rule 16 (args_list -> args_list COMMA expression .)
    RBRACE          reduce using rule 16 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 16 (args_list -> args_list COMMA expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 146

    (23) assignment -> LET ID EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 23 (assignment -> LET ID EQUALS expression .)
    $end            reduce using rule 23 (assignment -> LET ID EQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 147

    (34) rel_expression -> rel_expression AND rel_expression .
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 34 (rel_expression -> rel_expression AND rel_expression .)
    OR              reduce using rule 34 (rel_expression -> rel_expression AND rel_expression .)
    COLON           reduce using rule 34 (rel_expression -> rel_expression AND rel_expression .)
    $end            reduce using rule 34 (rel_expression -> rel_expression AND rel_expression .)
    THEN            reduce using rule 34 (rel_expression -> rel_expression AND rel_expression .)
    RPAREN          reduce using rule 34 (rel_expression -> rel_expression AND rel_expression .)

  ! AND             [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]


state 148

    (35) rel_expression -> rel_expression OR rel_expression .
    (34) rel_expression -> rel_expression . AND rel_expression
    (35) rel_expression -> rel_expression . OR rel_expression

    AND             reduce using rule 35 (rel_expression -> rel_expression OR rel_expression .)
    OR              reduce using rule 35 (rel_expression -> rel_expression OR rel_expression .)
    COLON           reduce using rule 35 (rel_expression -> rel_expression OR rel_expression .)
    $end            reduce using rule 35 (rel_expression -> rel_expression OR rel_expression .)
    THEN            reduce using rule 35 (rel_expression -> rel_expression OR rel_expression .)
    RPAREN          reduce using rule 35 (rel_expression -> rel_expression OR rel_expression .)

  ! AND             [ shift and go to state 120 ]
  ! OR              [ shift and go to state 121 ]


state 149

    (28) rel_expression -> expression GREATER_THAN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    AND             reduce using rule 28 (rel_expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 28 (rel_expression -> expression GREATER_THAN expression .)
    COLON           reduce using rule 28 (rel_expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 28 (rel_expression -> expression GREATER_THAN expression .)
    THEN            reduce using rule 28 (rel_expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 28 (rel_expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 150

    (29) rel_expression -> expression LESS_THAN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    AND             reduce using rule 29 (rel_expression -> expression LESS_THAN expression .)
    OR              reduce using rule 29 (rel_expression -> expression LESS_THAN expression .)
    COLON           reduce using rule 29 (rel_expression -> expression LESS_THAN expression .)
    $end            reduce using rule 29 (rel_expression -> expression LESS_THAN expression .)
    THEN            reduce using rule 29 (rel_expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 29 (rel_expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 151

    (30) rel_expression -> expression EQUAL_GREATER_THAN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    AND             reduce using rule 30 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    OR              reduce using rule 30 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    COLON           reduce using rule 30 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    $end            reduce using rule 30 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    THEN            reduce using rule 30 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    RPAREN          reduce using rule 30 (rel_expression -> expression EQUAL_GREATER_THAN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 152

    (31) rel_expression -> expression EQUAL_LESS_THAN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    AND             reduce using rule 31 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    OR              reduce using rule 31 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    COLON           reduce using rule 31 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    $end            reduce using rule 31 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    THEN            reduce using rule 31 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    RPAREN          reduce using rule 31 (rel_expression -> expression EQUAL_LESS_THAN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 153

    (32) rel_expression -> expression EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    AND             reduce using rule 32 (rel_expression -> expression EQUALS expression .)
    OR              reduce using rule 32 (rel_expression -> expression EQUALS expression .)
    COLON           reduce using rule 32 (rel_expression -> expression EQUALS expression .)
    $end            reduce using rule 32 (rel_expression -> expression EQUALS expression .)
    THEN            reduce using rule 32 (rel_expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 32 (rel_expression -> expression EQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 154

    (33) rel_expression -> expression NOT_EQUAL expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    AND             reduce using rule 33 (rel_expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 33 (rel_expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 33 (rel_expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 33 (rel_expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 33 (rel_expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 33 (rel_expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 155

    (36) rel_expression -> LPAREN rel_expression RPAREN .

    AND             reduce using rule 36 (rel_expression -> LPAREN rel_expression RPAREN .)
    OR              reduce using rule 36 (rel_expression -> LPAREN rel_expression RPAREN .)
    COLON           reduce using rule 36 (rel_expression -> LPAREN rel_expression RPAREN .)
    $end            reduce using rule 36 (rel_expression -> LPAREN rel_expression RPAREN .)
    THEN            reduce using rule 36 (rel_expression -> LPAREN rel_expression RPAREN .)
    RPAREN          reduce using rule 36 (rel_expression -> LPAREN rel_expression RPAREN .)


state 156

    (69) for_block_begin -> FOR ID EQUALS expression . TO expression
    (70) for_block_begin -> FOR ID EQUALS expression . TO expression STEP expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    TO              shift and go to state 166
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 157

    (19) params_list -> ID .

    RPAREN          reduce using rule 19 (params_list -> ID .)
    COMMA           reduce using rule 19 (params_list -> ID .)


state 158

    (20) defun_statement -> DEFUN ID LPAREN params_list . RPAREN EQUALS expression
    (18) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 167
    COMMA           shift and go to state 168


state 159

    (71) function_block_begin -> SUB ID LPAREN params_list . RPAREN
    (18) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 169
    COMMA           shift and go to state 168


state 160

    (73) function_block_begin -> SUB ID LPAREN RPAREN .

    COLON           reduce using rule 73 (function_block_begin -> SUB ID LPAREN RPAREN .)
    $end            reduce using rule 73 (function_block_begin -> SUB ID LPAREN RPAREN .)


state 161

    (72) function_block_begin -> FUNCTION ID LPAREN params_list . RPAREN
    (18) params_list -> params_list . COMMA ID

    RPAREN          shift and go to state 170
    COMMA           shift and go to state 168


state 162

    (74) function_block_begin -> FUNCTION ID LPAREN RPAREN .

    COLON           reduce using rule 74 (function_block_begin -> FUNCTION ID LPAREN RPAREN .)
    $end            reduce using rule 74 (function_block_begin -> FUNCTION ID LPAREN RPAREN .)


state 163

    (27) declare_array -> DIM ID LPAREN expression . RPAREN AS ID
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    RPAREN          shift and go to state 171
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 164

    (25) assignment -> expression DOT ID EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 25 (assignment -> expression DOT ID EQUALS expression .)
    $end            reduce using rule 25 (assignment -> expression DOT ID EQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 165

    (24) assignment -> ID LPAREN expression RPAREN EQUALS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 172

state 166

    (69) for_block_begin -> FOR ID EQUALS expression TO . expression
    (70) for_block_begin -> FOR ID EQUALS expression TO . expression STEP expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 173

state 167

    (20) defun_statement -> DEFUN ID LPAREN params_list RPAREN . EQUALS expression

    EQUALS          shift and go to state 174


state 168

    (18) params_list -> params_list COMMA . ID

    ID              shift and go to state 175


state 169

    (71) function_block_begin -> SUB ID LPAREN params_list RPAREN .

    COLON           reduce using rule 71 (function_block_begin -> SUB ID LPAREN params_list RPAREN .)
    $end            reduce using rule 71 (function_block_begin -> SUB ID LPAREN params_list RPAREN .)


state 170

    (72) function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .

    COLON           reduce using rule 72 (function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .)
    $end            reduce using rule 72 (function_block_begin -> FUNCTION ID LPAREN params_list RPAREN .)


state 171

    (27) declare_array -> DIM ID LPAREN expression RPAREN . AS ID

    AS              shift and go to state 176


state 172

    (24) assignment -> ID LPAREN expression RPAREN EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 24 (assignment -> ID LPAREN expression RPAREN EQUALS expression .)
    $end            reduce using rule 24 (assignment -> ID LPAREN expression RPAREN EQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 173

    (69) for_block_begin -> FOR ID EQUALS expression TO expression .
    (70) for_block_begin -> FOR ID EQUALS expression TO expression . STEP expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 69 (for_block_begin -> FOR ID EQUALS expression TO expression .)
    $end            reduce using rule 69 (for_block_begin -> FOR ID EQUALS expression TO expression .)
    STEP            shift and go to state 177
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 174

    (20) defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 178

state 175

    (18) params_list -> params_list COMMA ID .

    RPAREN          reduce using rule 18 (params_list -> params_list COMMA ID .)
    COMMA           reduce using rule 18 (params_list -> params_list COMMA ID .)


state 176

    (27) declare_array -> DIM ID LPAREN expression RPAREN AS . ID

    ID              shift and go to state 179


state 177

    (70) for_block_begin -> FOR ID EQUALS expression TO expression STEP . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EXACTDIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression AS expression
    (45) expression -> . expression EXP expression
    (46) expression -> . expression DOT ID
    (47) expression -> . MINUS expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN RPAREN
    (50) expression -> . ID LPAREN args_list RPAREN
    (51) expression -> . INTEGER
    (52) expression -> . DECIMAL
    (53) expression -> . STRING
    (54) expression -> . ID
    (55) expression -> . LBRACE args_list RBRACE

    MINUS           shift and go to state 30
    LPAREN          shift and go to state 21
    ID              shift and go to state 61
    INTEGER         shift and go to state 31
    DECIMAL         shift and go to state 32
    STRING          shift and go to state 33
    LBRACE          shift and go to state 34

    expression                     shift and go to state 180

state 178

    (20) defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 20 (defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .)
    $end            reduce using rule 20 (defun_statement -> DEFUN ID LPAREN params_list RPAREN EQUALS expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111


state 179

    (27) declare_array -> DIM ID LPAREN expression RPAREN AS ID .

    COLON           reduce using rule 27 (declare_array -> DIM ID LPAREN expression RPAREN AS ID .)
    $end            reduce using rule 27 (declare_array -> DIM ID LPAREN expression RPAREN AS ID .)


state 180

    (70) for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EXACTDIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . AS expression
    (45) expression -> expression . EXP expression
    (46) expression -> expression . DOT ID

    COLON           reduce using rule 70 (for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .)
    $end            reduce using rule 70 (for_block_begin -> FOR ID EQUALS expression TO expression STEP expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    EXACTDIV        shift and go to state 55
    MOD             shift and go to state 56
    AS              shift and go to state 57
    EXP             shift and go to state 58
    DOT             shift and go to state 111

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for EXACTDIV in state 106 resolved as shift
WARNING: shift/reduce conflict for MOD in state 106 resolved as shift
WARNING: shift/reduce conflict for AS in state 106 resolved as shift
WARNING: shift/reduce conflict for EXP in state 106 resolved as shift
WARNING: shift/reduce conflict for DOT in state 106 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 114 resolved as shift
